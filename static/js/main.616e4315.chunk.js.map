{"version":3,"sources":["User.js","MatrixList.js","Editable.js","KoreanVK.js","JapaneseVK.js","VirtualKeyboardInput.js","Matrix.js","NavBar.js","TestPage.js","App.js","serviceWorker.js","index.js"],"names":["makeTextFileLineIterator","fileURL","a","utf8Decoder","TextDecoder","fetch","response","reader","body","getReader","read","chunk","value","readerDone","done","decode","re","startIndex","result","exec","remainder","substr","lastIndex","substring","index","length","localStorage","window","getAllLocalData","Data","concat","Topik1","Coca","JapaneseWords","KorBooks","getTextData","TextDecks","getProperty","entity","id","propertyName","path","getItem","LocalUser","setTimeout","name","undefined","password","rememberMe","console","log","setItem","removeItem","email","jsonDecks","map","item","Id","Name","description","Description","language","Language","rowNumber","Rows","textDecks","fromRow","number","data","deckData","find","deck","deckDesc","this","getTextDeck","rowsWithId","wordId","transScore","word","meaning","extra","score","Math","floor","rows","url","process","FileName","line","split","push","LocalDeck","deckId","translation","LocalTest","succeeded","setScore","scoreName","prevScore","newScore","trunc","getScoreAfterTest","setProperty","user","test","getUser","getTest","MatrixList","props","state","decks","getDeckList","setState","key","to","className","React","Component","Editable","text","type","placeholder","children","childRef","useState","isEditing","setEditing","useEffect","current","focus","onBlur","onKeyDown","e","event","keys","allKeys","indexOf","handleKeyDown","onClick","code_holder","release_selection","input","replace_selection","str","highlight","initial_table","medial_table","final_table","jaso_table","compose_korean_char","alphabet","i","String","fromCharCode","charCodeAt","shift","final_code","medial_code","initial_code","charAt","j","k","tmp","key_down_korean","input_ctrl","clear_all","shiftKey","key_down","which","keyCode","left_yinhao1","left_yinhao2","Callback","word_lists","splits","page_number","list_index","show_hiragana","words_in_list","$","menu","eq","alert","hide_popup","remove","populateMenu","highlight_word","method","cors","referrerPolicy","headers","then","matchAll","words","w","match","createMenu","removeClass","addClass","all","prev_page","next_page","startWordIndex","endWordIndex","min","pageUp","css","append","itemText","link","click","pageDn","after","createPopper","placement","key_char_quan","romaji_array","alphabet_to_kana","char","show_katakana","head_str","rear_str","kana","find_hiragana","check_romaji","show","key_down_japanese","callback","is_word_div_visible","p2","show_popup","insert_word","get_word_div_visible","ctrlKey","VirtualKeyboardInput","inputDiv","createRef","vkEdit","VirtuakKeyboardEdit","input_text","ethalon","onChange","style","minWidth","display","contentEditable","ref","bind","handleMouseDown","handleOnInput","keydown","mousedown","on","activeNode","afterNode","key_down_handler","key_down_native","show_hint","inEdit","ret_value","blur","document","button","getSelection","sel","focusNode","focusOffset","newPos","setCaretPosition","stopElem","contents","each","elem","textContent","getActiveNodeAndOffset","focusedNode","textOffset","text_before_caret","get_text_before","text_before","get_text_before_caret","hint","hintElem","append_elem_after_caret","after_elem","full_text","correct_text","newNode","createTextNode","nodeType","Node","TEXT_NODE","firstChild","get_input_text","after_node","new_elem","parentNode","node","nodeValue","setActiveNodeCaretPos","added_text","finish_input","initialText","newSpan","after_text","selected_text","caretPos","range","createRange","setStart","collapse","removeAllRanges","addRange","InputEditable","typedText","setTypedText","Mode","Object","freeze","ShowWordAndTranslation","TestTranslation","TestWord","ConfirmTranslationControls","Step","ShowOkFailed","Ok","Failed","step","setStep","Fragment","setTranslationTestResult","repeat","getWordToShow","isKanaMode","ShowBothMode","modeControls","isFirst","wordToShow","rowSpan","TestTranslationMode","isTranslationShown","showTranslation","TranslationCell","buttonShow","disabled","bgColor","getBgColorFromScore","backgroundColor","RowToInputWord","isCorrect","setCorrect","editable","correct","TestWordMode","Card","isActive","onActivate","initialMode","onResetMode","mode","setMode","ModeButton","buttonMode","title","autoComplete","checked","modeTable","args","data-toggle","KanaMode","target","htmlFor","VirtualKbd","defaultChecked","OnlyForgotten","getCountryFlag","cc","risl","chr","fromCodePoint","toUpperCase","Emoji","role","aria-label","label","aria-hidden","symbol","LanguageSelector","width","SetAllCardMode","onModeChange","Page","Matrix","GlobalControls","setInitialMode","setKanaMode","setOnlyForgottenWords","isSet","setDeck","activeCardId","setActiveCardId","isOnlyForgottenWords","deckGetter","urlParams","queryString","parse","location","search","getDeck","deckD","cardRows","filter","cards","size","temparray","slice","cardData","UserControl","username","setUsername","history","useHistory","userGetter","getName","Login","Button","variant","logout","setShow","setPassword","setRememberMe","handleClose","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Control","Check","Footer","login","NavBar","src","alt","height","InputTest","TestPage","Error","App","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,SAAK,UACb,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,SAAK,UACb,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,SAAK,UACb,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,UACb,CAAC,2BAAQ,SAAK,UACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,eAAM,eAAM,gBACb,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,eAAM,gBACb,CAAC,eAAM,eAAM,gBACb,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,eAAM,gBACb,CAAC,eAAM,eAAM,gBACb,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,UACb,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,qBAAO,eAAM,gBACd,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,eAAM,SAAK,UACZ,CAAC,qBAAO,SAAK,UACb,CAAC,qBAAO,SAAK,WAGjB,SAASC,GAAiB5E,EAAO6E,EAAMzC,QACdnI,IAAlBmI,GAA6BK,MAAM,6BAGtC,IAFA,IAAMqC,GAAiB1C,EACnB1B,EAAI,EACDA,EAAIZ,GAAYlH,SACsC,IAArD8L,GAAc/E,QAAQG,GAAYtH,OAAOkI,EAAG,IADrBA,KAG/B,GAAIoE,GAA0B,WAATD,GAAgBnE,IAAMZ,GAAYlH,OAEnDqH,GAAkBD,EADlBF,IAAe,UACuB,QAGtC,GAAIY,EAAIZ,GAAYlH,OAAQ,CACxB,IAAImM,EAAWjF,GAAYtH,OAAO,EAAGkI,GACjCsE,EAAWlF,GAAYtH,OAAOkI,GAClC,GAAIsE,IAAaH,GAAiB,WAATA,EAGrB,YADA5E,GAAkBD,EADlBF,IAAe+E,GACuB,GAG1C,GAAiB,WAAbG,GAA6B,WAATH,GAAyB,WAATA,GAAyB,WAATA,GAAyB,WAATA,GAAyB,WAATA,GAAyB,WAATA,GAAyB,WAATA,EAGpH,YADA5E,GAAkBD,EADlBF,GAAciF,GAAY3C,EAAgB,SAAM,UAAOyC,GACjB,GAEnC,GAAIG,EAASpM,QAAU,GAAKoM,EAASxM,OAAO,EAAG,KAAOwM,EAASxM,OAAO,EAAG,GAAI,CAChF,IAAMyM,EAAOC,GAAcF,EAASxM,OAAO,GAAKqM,EAAMzC,GAKtD,YAJa,KAAT6C,EAEAhF,GAAkBD,EADlBF,GAAciF,GAAY3C,EAAgB,SAAM,UAAO6C,GACjB,GACnCE,GAAanF,EAAOgF,EAASxM,OAAO,GAAKqM,IAGhD,IAAMI,EAAOC,GAAcF,EAAWH,EAAMzC,GAC/B,KAAT6C,EAEAhF,GAAkBD,EADlBF,GAAciF,EAAWE,GACa,GACnCE,GAAanF,EAAOgF,EAAWH,OAEvC,CACH,IAAMI,EAAOC,GAAcL,EAAMzC,GAGjCnC,GAAkBD,EAFDF,IAAJ,KAATmF,EAA4BA,EACZJ,GACkB,IAKlD,SAASK,GAAchF,EAAKkC,GAExB,QADmBnI,IAAhBmI,GAA2BK,MAAM,6BAChCL,GACA,IAAK,IAAI1B,EAAI,EAAGA,EAAIiE,GAAa/L,OAAQ8H,IACrC,GAAIiE,GAAajE,GAAG,KAAOR,EAAK,OAAOyE,GAAajE,GAAG,QAG3D,IAAK,IAAIA,EAAI,EAAGA,EAAIiE,GAAa/L,OAAQ8H,IACrC,GAAIiE,GAAajE,GAAG,KAAOR,EAAK,OAAOyE,GAAajE,GAAG,GAG/D,MAAO,GAGX,SAASyE,GAAanF,EAAOE,GACzB,IAAK,IAAIQ,EAAI,EAAGA,EAAIiE,GAAa/L,OAAQ8H,IACrC,GAAwC,IAApCiE,GAAajE,GAAG,GAAGf,QAAQO,GAG3B,YADAD,GAAkBD,EADlBF,IAAeI,EAAI1H,OAAO0H,EAAItH,OAAS,EAAG,IACJ,GAI9C0J,IAAE,cAAc8C,OAIpB,SAASC,GAAkB9F,EAAGnB,EAAKmD,EAAY+D,GAC3C,IApgBetF,EAogBToC,EAAgBkD,EAASlD,cAC/B,OAAQhE,GACJ,KAAK,EACD,MAAoB,KAAhB0B,KAEAG,GAAkBsB,EADlBzB,GAAcA,GAAYtH,OAAO,EAAGsH,GAAYlH,OAAS,IACd,GAE3C0M,EAAS5C,cArhBd,GAyhBH,KAAK,EAED,MADoB,KAAhB5C,IAAoBG,GAAkBsB,EAAY,QAAQ,IA1hB/D,EA4hBH,KAAK,GAED,OAphBOvB,EAmhBGuB,GAlhBbC,YACNxB,EAAMsF,SAAS5C,aACf5C,GAAc,IAbN,EA+hBH,KAAK,GACD,MAAoB,KAAhBA,KAEAwF,EAAS3B,aAliBd,GAsiBH,KAAK,GACD,MAAoB,KAAhB7D,KAEAwF,EAAS1B,aAziBd,GA6iBH,KAAK,GACD,GAAoB,KAAhB9D,IACA,GAAKwF,EAASC,sBAkBVD,EAASzC,eAAe,aAjBxB,GAAIT,EAAe,CAEf,IADA,IAAIlC,EAAM,GACDQ,EAAI,EAAGA,EAAIZ,GAAYlH,OAAQ8H,IACpC,IAAK,IAAIS,EAAI,EAAGA,EAAIwD,GAAa/L,OAAQuI,IACrC,GAAIwD,GAAaxD,GAAG,KAAOrB,GAAYtH,OAAOkI,EAAG,GAAI,CACjDR,GAAOyE,GAAaxD,GAAG,GACvB,MAKZ,IADA,IAAIqE,EAAK,GACA9E,EAAI,EAAGA,EAAIR,EAAItH,OAAQ8H,IAC5B8E,GA/Vb,mDA+V0BhN,OAAOkM,GAAc/E,QAAQO,EAAI1H,OAAOkI,EAAG,IAAK,GAEjE4E,EAASG,WAAWD,SAKzBvF,GAAkBsB,EAAY,UAAK,GAC1C,OApkBD,EAqkBH,KAAK,GACD,OAAI+D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,yBAvkBnC,GAykB4B,KAAhB7F,KArkBvB,SAA2BE,GACxBA,EAAMD,oBACNC,EAAMsF,SAAS5C,aACf5C,GAAc,GAmkBDC,CAAkBwB,IA1kBvB,GA8kBH,KAAK,GACD,OAAO,EACX,KAAK,GACD,OAAI+D,EAASC,wBACTD,EAASzC,eAAe,SAllB7B,GAslBH,KAAK,GACD,OAAIyC,EAASC,wBACTD,EAASzC,eAAe,SAxlB7B,GA4lBH,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,MAAoB,KAAhB/C,GAER,KAAK,IAKD,OAJIwF,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IAvmB/E,EAymBH,KAAK,GAUD,OATIlC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASC,sBAAuBD,EAASI,YAAY,GAChC,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAjnBrE,EAonBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IA5nBrE,EA+nBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAvoBrE,EA0oBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAlpBrE,EAqpBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IA7pBrE,EAgqBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAxqBrE,EA2qBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAnrBrE,EAsrBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IA9rBrE,EAisBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAzsBrE,EA4sBH,KAAK,GAUD,OATIhC,EAAEkC,UACE6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAY,UAAK,IAEvD+D,EAASjD,gBAAkB,EAAGiD,EAASI,YAAY,GAC9B,KAAhB5F,IAAoBG,GAAkBsB,EAAY,UAAK,IAptBrE,EAutBH,KAAK,IACL,KAAK,IAMD,OALI+D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,GAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,GACpElC,EAAEkC,UAAUmD,GAAiBrD,EAAY,SAAKa,IA7tBzD,EA+tBH,KAAK,IACL,KAAK,IAKD,OAJIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IApuB/E,EAsuBH,KAAK,GAOD,OANI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA3uBvC,EA8uBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAnvBvC,EAsvBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA3vBvC,EA8vBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAnwBvC,EAswBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA3wBvC,EA8wBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAnxBvC,EAsxBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA3xBvC,EA8xBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAnyBvC,EAsyBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA3yBvC,EA8yBH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAnzBvC,EAszBH,KAAK,IAKD,OAJIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IA1zB/E,EA4zBH,KAAK,IAKD,OAJI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IAh0B/E,EAk0BH,KAAK,IAKD,OAJI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IAt0B/E,EAw0BH,KAAK,GAOD,OANI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA70BvC,EAg1BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAr1BvC,EAw1BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA71BvC,EAg2BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAr2BvC,EAw2BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA72BvC,EAg3BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAr3BvC,EAw3BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA73BvC,EAg4BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAr4BvC,EAw4BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA74BvC,EAg5BH,KAAK,GACL,KAAK,IAKD,OAJIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IAr5B/E,EAu5BH,KAAK,IAcD,OAbI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,KACIP,EAAEkC,SAEHxB,GAAkBsB,GADlBO,IAAgBA,IAC6B,SAAM,UAAK,GAIxD7B,GAAkBsB,GADlBM,IAAgBA,IAC6B,SAAM,UAAK,KAl6BhE,EAs6BH,KAAK,GAOD,OANIyD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA36BvC,EA86BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAn7BvC,EAs7BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA37BvC,EA87BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAn8BvC,EAs8BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA38BvC,EA88BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IAn9BvC,EAs9BH,KAAK,GAOD,OANIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAE7BL,EAASC,uBACVX,GAAiBrD,EAAY,SAAKa,IA39BvC,EA89BH,KAAK,IAKD,OAJIkD,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IAl+B/E,EAo+BH,KAAK,IAKD,OAJI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IAx+B/E,EA0+BH,KAAK,IAKD,OAJI6D,EAASC,uBACTD,EAASI,YAAYJ,EAASK,wBAEd,KAAhB7F,IAAoBG,GAAkBsB,EAAYhC,EAAEkC,SAAW,SAAM,UAAK,IA9+B/E,EAg/BH,QACI,QAIZ,SAASC,GAASnC,EAAGgC,GAAa,IAAD,EAG9B,GAAIhC,EAAEqG,QAAS,OAAO,EACtB,IAAIxH,EAAMmB,EAAEoC,MAAQpC,EAAEoC,MAAQpC,EAAEqC,QAE5B0D,EAAQ,UAAG/D,EAAW+D,gBAAd,QAA0B,IAAIvD,GAASR,GAGnD,OAFAA,EAAW+D,SAAWA,EAET,MAAV/F,EAAEnB,KAAemB,EAAEqG,SACnBN,EAASlD,eAAiBkD,EAASlD,eAC5B,IAEG,MAAV7C,EAAEnB,MACFA,EAAM,KAEI,MAAVmB,EAAEnB,MACFA,EAAM,KAEFiH,GAAkB9F,EAAGnB,EAAKmD,EAAY+D,I,IC7gC1CO,G,kDACH,WAAY9H,GAAQ,IAAD,8BAChB,cAAMA,IACD+H,SAAWvH,IAAMwH,YAFN,E,gEAMjBnK,KAAKoK,OAAS,IAAIC,GAAoB,CACnCjG,MAAOpE,KAAKkK,SAAS3G,QACrB+G,WAAYtK,KAAKmC,MAAMmI,WACvBC,QAASvK,KAAKmC,MAAMoI,QACpBC,SAAUxK,KAAKmC,MAAMqI,SACrBpL,SAAUY,KAAKmC,MAAM/C,WAExBY,KAAKkK,SAAS3G,QAAQC,U,+BAKrB,OACG,0BAAOiH,MAFK,CAAEC,SAAU,MAAOC,QAAS,gBAElBjI,UAAU,wBAC1BkI,gBAAgB,OAChBC,IAAK7K,KAAKkK,e,GAtBUvH,IAAMC,WA6BnCyH,G,WACH,WAAYlI,GAcT,OAdgB,oBAChBnC,KAAKoE,MAAQsC,IAAEvE,EAAMiC,OACrBpE,KAAKgE,cAAgBhE,KAAKgE,cAAc8G,KAAK9K,MAC7CA,KAAK+K,gBAAkB/K,KAAK+K,gBAAgBD,KAAK9K,MACjDA,KAAKgL,cAAgBhL,KAAKgL,cAAcF,KAAK9K,MAC7C0G,IAAE1G,KAAKoE,OAAO6G,QAAQjL,KAAKgE,eAC3B0C,IAAE1G,KAAKoE,OAAO8G,UAAUlL,KAAK+K,iBAC7BrE,IAAE1G,KAAKoE,OAAO+G,GAAG,QAASnL,KAAKgL,eAC/BtE,IAAE1G,KAAKoE,OAAOtB,KAAKX,EAAMmI,YAAc,IAEvCtK,KAAKuK,QAAUpI,EAAMoI,SAAW,GAChCvK,KAAKoL,WAAa,KAClBpL,KAAKqL,UAAY,KACjBrL,KAAKwK,SAAWrI,EAAMqI,UAAa,SAAC1H,KAC7BX,EAAM/C,UACb,IAAK,KAAMY,KAAKsL,iBAAmB5F,GAChC,MACH,IAAK,KAAM1F,KAAKsL,iBAAmB7B,GAChC,MACH,QACGzJ,KAAKsL,iBAAmBC,I,0DAMhB5H,GACX,IAAInB,EAAMmB,EAAEoC,MAAQpC,EAAEoC,MAAQpC,EAAEqC,QAChCU,IAAE,SAASK,SACA,KAARvE,GAAcmB,EAAEqG,SAChBhK,KAAKwL,YAER,IAAMC,EAA4B,MAAnBzL,KAAKoL,WACdM,EAAY1L,KAAKsL,iBAAiB3H,EAAG3D,MAC3C,OAAY,KAARwC,GACGiJ,GACDzL,KAAKoE,MAAMuH,QACP,IAEN3L,KAAKoL,WAGFM,K,sCAGM/H,M,sCAIb,IAAMb,EAAO4D,IAAE1G,KAAKoE,OAAOtB,OAC3B9C,KAAKwK,SAAS1H,K,yCAGEa,KACXiI,SAAS9D,KAAoB,IAAbnE,EAAEkI,QAAkBD,SAAS9D,KAAoB,IAAbnE,EAAEkI,SACzD7L,KAAKmE,sB,+CAKR,GAAIjH,OAAO4O,aAAc,CACtB,IAAMC,EAAM7O,OAAO4O,eACnB,MAAO,CAACC,EAAIC,UAAWD,EAAIE,aAE9B,MAAO,CAAC,KAAM,K,4CAGMC,GAAUC,GAAiBnM,KAAKoL,WAAYc,K,sCAElDE,GACb,IAAItJ,EAAO,GAMX,OALA4D,IAAE1G,KAAKoE,OAAOiI,WAAWC,MAAK,SAACvP,EAAOwP,GAEnC,GADAzJ,GAAQyJ,EAAKC,YACVD,IAASH,EACT,OAAO,KAENtJ,I,8CAIP4D,IAAE1G,KAAKoE,OAAOnB,WAAWqJ,MAAK,WACI,IAA1B5F,IAAE1G,MAAM8C,OAAO9F,QACf0J,IAAE1G,MAAM+G,c,8CAKM,IAAD,EACa/G,KAAKyM,yBADlB,mBACdC,EADc,KACDC,EADC,KAEjBC,EAAoBlG,IAAE1G,KAAKoL,YAAYtI,OAAOlG,OAAO+P,GAEzD,OADAC,GAAqB5M,KAAK6M,gBAAgBH,K,kCAK1C,GAAoB,KAAjB1M,KAAKuK,QAAR,CAEC,IAAMuC,EAAc9M,KAAK+M,wBACrBC,EAAOhN,KAAKuK,QAAQ3N,OAAOkQ,EAAY9P,OAAQ,GAEnDgQ,EAAgB,KAATA,EAAcA,EAAO,SAEzB,IAAMC,EAAWvG,IAAE,sCAAsC5D,KAAKkK,GADjE,EAE2BhN,KAAKyM,yBAAtBC,EAFV,oBAGG1M,KAAKkN,wBAAwBR,EAAaO,M,mCAIpC3I,EAAK6I,GACf,IAAMC,EAAYpN,KAAK6M,gBAAgBM,GACjCE,EAAerN,KAAKuK,QAAQ3N,OAAOwQ,EAAUpQ,OAAQsH,EAAItH,QAE3DsQ,EAAU,KAEXA,EAHiC,KAAjBtN,KAAKuK,SAAoB8C,IAAiB/I,EAGhDsH,SAAS2B,eAAejJ,GAExBoC,IAAE,8BAA8B5D,KAAKwB,GAG9C6I,IAAenN,KAAKoE,MAAM,GAC3BsC,IAAEyG,GAAY7E,OAAOgF,GAErB5G,IAAEyG,GAAYxE,MAAM2E,GAEF,MAAlBtN,KAAKqL,UACLc,GAAiBnM,KAAKqL,UAAW,GAC3BiC,EAAQE,WAAaC,KAAKC,UAChCvB,GAAiBmB,EAAShJ,EAAItH,QAE9BmP,GAAiBmB,EAAQ,GAAGK,WAAYrJ,EAAItH,QAC/CgD,KAAKwK,SAASxK,KAAK4N,oB,8CAGEC,EAAYC,GACjC,OAAID,IAAe7N,KAAKoE,MAAM,IAC3BsC,IAAEmH,GAAYvF,OAAOwF,GACdD,GAEyB,OAA1BA,EAAWE,YACXF,EAAWE,aAAe/N,KAAKoE,MAAM,IAC3CsC,IAAEmH,EAAWE,YAAYpF,MAAMmF,GACxBD,EAAWE,aAElBrH,IAAEmH,GAAYlF,MAAMmF,GAChBD,K,uCAKP,IAAI/K,EAAO,GAKX,OAJA4D,IAAE1G,KAAKoE,OAAOiI,WAAWC,MAAK,SAACvP,EAAOiR,GAEnClL,GAAQkL,EAAKxB,eAET1J,I,kCAKPtE,QAAQC,IAAI,QACU,MAAnBuB,KAAKoL,aAER1E,IAAE,gBAAgBK,SACe,MAA7B/G,KAAKoL,WAAW6C,WACjBjO,KAAKkO,sBAAsBlO,KAAKoL,WAAW6C,UAAUjR,QACxDgD,KAAKoL,WAAa,KAClBpL,KAAKqL,UAAY,Q,0CAKjB,GADA7M,QAAQC,IAAI,WACU,MAAnBuB,KAAKoL,WAAR,CAEA,IAAM+C,EAAazH,IAAE,gBAAgB5D,OACrC4D,IAAE,gBAAgBK,SAClB/G,KAAKoO,aAAaD,EAAYnO,KAAKoL,YACnCpL,KAAKoL,WAAa,KAClBpL,KAAKqL,UAAY,Q,wCAKF/G,EAAKC,GAEpB,GADA/F,QAAQC,IAAI,MAAQ6F,EAAM,IAAMC,GAC5BA,EAUC,GAAsB,MAAnBvE,KAAKoL,WAAmB,CAAC,IAAD,IACKpL,KAAKyM,yBADV,mBACtBC,EADsB,KACTC,EADS,KAE7B3M,KAAKoL,WAAasB,EAClB,IAAM2B,EAAc3H,IAAE1G,KAAKoL,YAAYtI,OACvC9C,KAAKoL,WAAW6C,UAAYI,EAAYzR,OAAO,EAAG+P,GAClD,IAAM2B,EAAU5H,IAAE,sDAAsD5D,KAAKwB,GACzEtE,KAAKoL,aAAepL,KAAKoE,MAAM,GAChCsC,IAAE1G,KAAKoL,YAAY9C,OAAOgG,GACW,OAA/BtO,KAAKoL,WAAW2C,YAChB/N,KAAKoL,WAAW2C,aAAe/N,KAAKoE,MAAM,IAChDpE,KAAKoL,WAAapL,KAAKoL,WAAW2C,WAClCrH,IAAE1G,KAAKoL,YAAYzC,MAAM2F,IAEzB5H,IAAE1G,KAAKoL,YAAYzC,MAAM2F,GAC5B,IAAMC,EAAaF,EAAYzR,OAAO+P,GACpB,KAAf4B,GACAvO,KAAKqL,UAAYO,SAAS2B,eAAegB,GACzC7H,IAAE4H,GAAS3F,MAAM3I,KAAKqL,YAEtBrL,KAAKqL,UAAY,KACpBiD,EAAQ9K,QACR2I,GAAgB,UAACmC,EAAQ,GAAGX,kBAAZ,QAA0BW,EAAQ,GAAI,QAGtDtO,KAAKwO,cAAgBlK,EACrBoC,IAAE,gBAAgB5D,KAAKwB,OAnCX,CACZ,GAAsB,MAAnBtE,KAAKoL,WAAoB,CAAC,IAAD,EACDpL,KAAKyM,yBAAtBC,EADkB,oBAGzB,YADA1M,KAAKoO,aAAa9J,EAAKoI,GAG1BhG,IAAE,gBAAgBK,SAClB/G,KAAKoO,aAAa9J,EAAKtE,KAAKoL,YAC5BpL,KAAKoL,WAAa,U,KAgC3B,SAASG,GAAgB5H,EAAGS,GACzB,OAAqB,IAAjBT,EAAEnB,IAAIxF,SAGVoH,EAAMC,kBAAkBV,EAAEnB,KAAK,IACxB,GAGV,SAAS2J,GAAiBI,EAAMkC,GAC7B,IAAIC,EAAQ9C,SAAS+C,cACjB5C,EAAM7O,OAAO4O,eACjB4C,EAAME,SAASrC,EAAMkC,GACrBC,EAAMG,UAAS,GACf9C,EAAI+C,kBACJ/C,EAAIgD,SAASL,GAGDzE,UC9Qf,SAAS+E,GAAT,GAAsE,IAA9CzE,EAA6C,EAA7CA,QAA6C,IAApCC,gBAAoC,MAA1B,SAAC1H,KAAyB,EAAX1D,EAAW,EAAXA,SAAW,EAChC+D,mBAAS,IADuB,mBAC3D8L,EAD2D,KAChDC,EADgD,KAKnE,OACE,kBAAC,EAAD,CACEpM,KAAMmM,EACNjM,YAAY,sEACZD,KAAK,SAEL,kBAAC,GAAD,CACE3E,KAAK,aACL4E,YAAY,GACZsH,WAAY2E,EACZ1E,QAASA,EACTC,SAAU,SAAA1H,GAAUoM,EAAapM,GAAO0H,EAAS1H,IACjD1D,SAAUA,KAMlB,IAAM+P,GAAOC,OAAOC,OAAO,CACrBC,uBAAwB,EACxBC,gBAAiB,EACjBC,SAAU,IAGhB,SAASC,GAAT,GAA+C,IAAVtP,EAAS,EAATA,OAC5BuP,EAAON,OAAOC,OAAO,CACrBM,aAAc,EACdC,GAAI,EACJC,OAAQ,IAJ6B,EAMnB1M,mBAASuM,EAAKC,cANK,mBAMpCG,EANoC,KAM9BC,EAN8B,KAO3C,OAAOD,GACJ,KAAKJ,EAAKC,aACP,OAAO,kBAAC,IAAMK,SAAP,KACE,0BAAMtN,UAAU,eACb,4BAAQA,UAAU,oCAAoC5E,GAAI,mBAAqBqC,EACvE8D,QAAS,WAAO8L,EAAQL,EAAKE,IAAK3N,IAAUgO,yBAAyB9P,GAAQ,KADrF,kCAIA,4BAAQuC,UAAU,wCAAwC5E,GAAI,iBAAmBqC,EACzE8D,QAAS,WAAO8L,EAAQL,EAAKG,QAAS5N,IAAUgO,yBAAyB9P,GAAQ,KADzF,iDAMf,KAAKuP,EAAKE,GACP,OAAO,0BAAMlN,UAAU,iCAAiC,OAASwN,OAAO,GAAM,SAAW,OAASA,OAAO,KAC5G,KAAKR,EAAKG,OACP,OAAO,0BAAMnN,UAAU,gCAAiC,OAASwN,OAAO,IAAM,SAAW,OAASA,OAAO,IAC5G,QACG,OAAO,MAIhB,SAASC,GAAcC,EAAYrR,GAChC,OAAOqR,QAA6B/R,IAAfU,EAAKwB,MAAsBxB,EAAKwB,MAAQxB,EAAKsB,KAGrE,SAASgQ,GAAT,GAAkE,IAA3C1P,EAA0C,EAA1CA,KAAM2P,EAAoC,EAApCA,aAAuBF,GAAa,EAAtBG,QAAsB,EAAbH,YAoBjD,OAnBU,EACUzP,EAAK7B,KACV,SAACC,EAAMhC,GACJ,IAAMyT,EAAaL,GAAcC,EAAYrR,GAC7C,OAAa,IAAVhC,EACQ,wBAAIyF,IAAKzF,GACL,wBAAI0T,QAAS9P,EAAK3D,QACfsT,GAEH,wBAAI5N,UAA0B,IAAK8N,GACnC,4BAAKzR,EAAKuB,UAGjB,wBAAIkC,IAAKzF,GACL,4BAAKyT,GACL,4BAAKzR,EAAKuB,aAwB3C,SAASoQ,GAAT,GAAyE,IAA3C/P,EAA0C,EAA1CA,KAAM2P,EAAoC,EAApCA,aAAuBF,GAAa,EAAtBG,QAAsB,EAAbH,YAAa,EACvBjN,oBAAS,GADc,mBAC9DwN,EAD8D,KAC1CC,EAD0C,KAG/DC,EAAkB,SAAC,GAA2B,IAA1BzP,EAAyB,EAAzBA,YAAajB,EAAY,EAAZA,OACZ,OAAQ,4BAAKwQ,EACD,oCACG,8BAAOvP,GACP,kBAACqO,GAAD,CAA4BjN,IAAKrC,EAAQA,OAAQA,KAGrD,0BAAMuC,UAAU,cAAc,OAASwN,OAA+B,GAAK,IAAM,OAASA,OAA+B,MAGzJY,EAAc,4BAAQpO,UAAW,4CACTuB,QAAS,WAAM2M,GAAgB,IAC/BG,SAAUJ,GAFpB,+FAsBpB,OAjBoBhQ,EAAK7B,KACV,SAACC,EAAMhC,GACJ,IAAMiU,EArC3B,SAA6BxQ,GAC1B,OAAOA,GAEJ,KAAK,EAAG,MAAO,YACf,KAAK,EAAG,MAAO,YACf,KAAK,EACL,KAAK,EAAG,OAAO,EAEf,KAAM,EAAG,MAAO,YAChB,KAAM,EAAG,MAAO,YAChB,KAAM,EACN,KAAM,EAAG,MAAO,YAChB,QACG,OAAQA,EAAQ,EAAK,YAAc,aAwBPyQ,CAAoBlS,EAAKyB,OACnCgQ,EAAaL,GAAcC,EAAYrR,GAC7C,OAAa,IAAVhC,EACQ,wBAAIyF,IAAKzF,GACL,wBAAI0T,QAAS9P,EAAK3D,QAASsT,EAA3B,IAA0CQ,GAC1C,wBAAIrG,MAAO,CAAEyG,gBAAiBF,IAAWR,GACzC,kBAACK,EAAD,CAAiBzP,YAAarC,EAAKuB,QAASH,OAAQpB,EAAKjB,MAG7D,wBAAI0E,IAAKzF,GACP,wBAAI0N,MAAO,CAACyG,gBAAiBF,IAAWR,GACxC,kBAACK,EAAD,CAAiBzP,YAAarC,EAAKuB,QAASH,OAAQpB,EAAKjB,SAO3F,SAASqT,GAAT,GAA+E,IAAtDb,EAAqD,EAArDA,aAAcG,EAAuC,EAAvCA,QAASpQ,EAA8B,EAA9BA,KAAMe,EAAwB,EAAxBA,YAAahC,EAAW,EAAXA,SAAW,EAC3C+D,oBAAS,GADkC,mBACpEiO,EADoE,KACzDC,EADyD,KAMrE1I,EAAQ,yBAAKjG,UAAU,4BAA4B0O,EAAY,SAAW,IAC1EE,EAAW,yBAAK5O,UAAU,cACX,kBAACsM,GAAD,CACGzE,QAASlK,EACTmK,SARH,SAAC1H,GACnB,IAAMyO,EAA2B,IAAhBzO,EAAK9F,QAAkBqD,IAASyC,EACjDuO,EAAWE,IAOUnS,SAAUA,KAGlC,OAAS,4BACIkR,EAAgB,wBAAIG,QAASA,GAAUH,GAAsB,KAC9D,4BACIgB,EACA3I,GAEJ,wBAAIjG,UAAU,IAAItB,IAIjC,SAASoQ,GAAT,GAAmE,IAA5C7Q,EAA2C,EAA3CA,KAAM2P,EAAqC,EAArCA,aAAclR,EAAuB,EAAvBA,SAAUgR,EAAa,EAAbA,WAWlD,OAVoBzP,EAAK7B,KACnB,SAACC,EAAMhC,GACJ,IAAMyT,EAAaL,GAAcC,EAAYrR,GAC7C,OAAO,kBAACoS,GAAD,CAAgB9Q,KAAMmQ,EACRpP,YAAarC,EAAKuB,QAClBlB,SAAUA,EACVkR,aAAwB,IAAVvT,EAAcuT,OAAejS,EAC3CoS,QAAS9P,EAAK3D,OACdwF,IAAKzF,OAKtC,SAAS0U,GAAT,GAC2C,IAD5B9Q,EAC2B,EAD3BA,KAAMvB,EACqB,EADrBA,SAAgBmR,GACK,EADXnS,KACW,EADLmS,SAASmB,EACJ,EADIA,SAAUC,EACd,EADcA,WAAYvB,EAC1B,EAD0BA,WACrDwB,EAA2B,EAA3BA,YAA2B,KAAdC,YACD1O,mBAAQ,OAACyO,QAAD,IAACA,IAAezC,GAAKI,kBADd,mBAChCuC,EADgC,KAC1BC,EAD0B,UAGpB1T,IAAhBuT,GAA6BA,IAAgBE,GAC7CC,EAAQH,GAGX,IAAMI,EAAa,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,WAAY7T,EAAqB,EAArBA,KAAM8T,EAAe,EAAfA,MAAOpU,EAAQ,EAARA,GAC9B2M,EAAQiH,EAAW,UAAY,YACrC,OAAO,2BAAOhP,UAAW,iCAA0B+H,EAA1B,gBAAiDqH,IAASG,EAAa,SAAW,IAChGC,MAAOA,GACP,2BAAOnP,KAAK,QAAQ3E,KAAM,SAASN,EAAIA,GAAI,SAASA,EACpDqU,aAAa,MAAMC,QAASN,IAASG,EACrCzH,SAAU,WAAQmH,IAAcI,EAAQE,MACvC7T,IAUlBiU,EAAY,KACVC,EAAO,CACV3R,KAAMA,EACN2P,aATI,yBAAK5N,UAAU,0CAA0C6P,cAAY,WACnE,kBAACP,EAAD,CAAYC,WAAY9C,GAAKG,uBAAwBlR,KAAK,sFAAuB8T,MAAM,oIAA2BpU,GAAG,MACrH,kBAACkU,EAAD,CAAYC,WAAY9C,GAAKI,gBAAwBnR,KAAK,uGAAuB8T,MAAM,oGAAoBpU,GAAG,MAC9G,kBAACkU,EAAD,CAAYC,WAAY9C,GAAKK,SAAwBpR,KAAK,yEAAuB8T,MAAM,kFAAiBpU,GAAG,OAOjHyS,QAASA,EACTnR,SAAUA,EACVgR,WAAYA,GAEf,OAAO0B,GACJ,KAAK3C,GAAKG,uBAAyB+C,EAAY,kBAAChC,GAAyBiC,GAAS,MAClF,KAAKnD,GAAKI,gBAAyB8C,EAAY,kBAAC3B,GAAyB4B,GAAS,MAClF,KAAKnD,GAAKK,SAAyB6C,EAAY,kBAACb,GAAyBc,GAI5E,OAAQ,2BAAO7H,MAAO,GAAK/H,UAAWgP,EAAW,wBAA0B,IAAKW,GAKnF,IAAMG,GAAW,SAAC,GAAD,IAAEhI,EAAF,EAAEA,SAAF,OACb,yBAAK9H,UAAU,uCACb,2BAAOK,KAAK,WAAWL,UAAU,uBAAuB5E,GAAG,gBAAgBM,KAAK,WAAWoM,SAAU,SAAC7G,GAAD,OAAO6G,EAAS7G,EAAE8O,OAAOL,YAC9H,2BAAO1P,UAAU,uBAAuBgQ,QAAQ,iBAAhD,yKAIAC,GAAa,SAAC,GAAD,IAAEnI,EAAF,EAAEA,SAAF,OACf,yBAAK9H,UAAU,uCACb,2BAAOK,KAAK,WAAWL,UAAU,uBAAuB5E,GAAG,kBAAkBM,KAAK,aAC3EoM,SAAU,SAAC7G,GAAD,OAAO6G,EAAS7G,EAAE8O,OAAOL,UAAUQ,gBAAgB,IACpE,2BAAOlQ,UAAU,uBAAuBgQ,QAAQ,mBAAhD,qIAIAG,GAAgB,SAAC,GAAD,IAAErI,EAAF,EAAEA,SAAF,OAClB,yBAAK9H,UAAU,uCACb,2BAAOK,KAAK,WAAWL,UAAU,uBAAuB5E,GAAG,oBAAoBM,KAAK,gBAC7EoM,SAAU,SAAC7G,GAAD,OAAO6G,EAAS7G,EAAE8O,OAAOL,UAAUQ,gBAAgB,IACpE,2BAAOlQ,UAAU,uBAAuBgQ,QAAQ,qBAAhD,iLAKN,SAASI,GAAeC,GAEtB,GAAkB,IAAdA,EAAG/V,OACL,OAAO+V,EAGT,SAASC,EAAKC,GACZ,OAAOlO,OAAOmO,cAAc,OAAeD,EAAIE,cAAclO,WAAW,IAI1E,OAAO+N,EAAKD,EAAG,IAAMC,EAAKD,EAAG,IAG/B,IAAMK,GAAQ,SAAAjR,GAAK,eACf,4BACIO,UAAU,QACV2Q,KAAK,MACLC,aAAA,UAAYnR,EAAMoR,aAAlB,QAA2B,GAC3BC,cAAarR,EAAMoR,MAAQ,QAAU,OACrCpX,MAAK,UAAEgG,EAAMoR,aAAR,QAAiB,IAErBpR,EAAMsR,SAITC,GAAmB,SAAC,GAAD,IAAEtU,EAAF,EAAEA,SAAF,OACtB,yBAAKsD,UAAU,kBACZ,2BAAOgQ,QAAQ,kBAAkBhQ,UAAU,2BAA3C,8BACA,4BAAS+H,MAAO,CAACkJ,MAAO,QAASjR,UAAU,eAAe5E,GAAG,kBAAkB3B,MAAOiD,EAAUoL,SAAU,cACvG,4BAAQrO,MAAM,IAAd,qDACA,kBAAC,GAAD,CAAOsX,OAAQX,GAAe,MAAQ,gEAAeS,MAAM,OAC3D,kBAAC,GAAD,CAAOE,OAAQX,GAAe,MAAQ,0DAAeS,MAAM,OAC3D,kBAAC,GAAD,CAAOE,OAAQX,GAAe,MAAQ,oDAAeS,MAAM,UAK9DK,GAAiB,SAAC,GAA0B,IAAzB9B,EAAwB,EAAxBA,KAAM+B,EAAkB,EAAlBA,aAC5B,OACM,yBAAKnR,UAAU,kBACZ,2BAAOA,UAAU,2BAAjB,kEAEG,4BAAQA,UAAU,0BACVqO,SAAUe,IAAS3C,GAAKG,uBACxBrL,QAAS,kBAAK4P,EAAa1E,GAAKG,0BAFxC,uFAKA,4BAAQ5M,UAAU,+BACVqO,SAAUe,IAAS3C,GAAKI,gBACxBtL,QAAS,kBAAK4P,EAAa1E,GAAKI,mBAFxC,wGAKA,4BAAQ7M,UAAU,+BACVqO,SAAUe,IAAS3C,GAAKK,SACxBvL,QAAS,kBAAK4P,EAAa1E,GAAKK,YAFxC,4EASTsE,GAAO,SAAC3R,GAAD,OACX,oCACE,yBAAKO,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,kBAACqR,GAAW5R,QAMhB6R,GAAiB,SAAC,GAC4C,IAD3ClU,EAC0C,EAD1CA,KAAMmU,EACoC,EADpCA,eAAgBrC,EACoB,EADpBA,YACtBsC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,sBACpC,OACA,oCACG,kBAAC,GAAD,CAAkB/U,SAAUU,EAAKV,WAC/B,CAAC,KAAM,MAAO2E,QAAQjE,EAAKV,WAAY,EAAK,kBAAC,GAAD,CAAUoL,SAAU,SAAC4J,GAAD,OAAWF,EAAYE,MAAY,KACnG,CAAC,KAAM,MAAOrQ,QAAQjE,EAAKV,WAAY,EAAK,kBAAC,GAAD,CAAYoL,SAAU,SAAC4J,OAAoB,KAC1F,kBAAC,GAAD,CAAe5J,SAAU,SAAC4J,GAAD,OAAWD,EAAsBC,MAC1D,kBAAC,GAAD,CAAgBtC,KAAMF,EACPiC,aAAe,SAAC/B,GAAD,OAAUmC,EAAenC,QAK3D,SAASiC,GAAO5R,GAAQ,IAAD,EACIgB,mBAAS,CAACxC,KAAK,GAAIvC,KAAM,GAAIgB,SAAU,KAD3C,mBACbU,EADa,KACPuU,EADO,OAEoBlR,wBAAS9E,GAF7B,mBAEbiW,EAFa,KAECC,EAFD,OAGcpR,oBAAS,GAHvB,mBAGbiN,EAHa,KAGD8D,EAHC,OAKkC/Q,oBAAS,GAL3C,mBAKbqR,EALa,KAKSL,EALT,OAMkBhR,mBAASgM,GAAKI,iBANhC,mBAMbqC,EANa,KAMAqC,EANA,KAQpB3Q,qBAAU,WACW,MAAX,OAAJxD,QAAI,IAAJA,OAAA,EAAAA,EAAM1B,OACNqW,OAIN,IAAMC,EAAYC,IAAYC,MAAMzS,EAAM0S,SAASC,QACnD,QAAqBzW,IAAjBqW,EAAU5W,GACX,OAAO,KAGV,IAAMqD,EAASuT,EAAU5W,GACnB2W,EAAU,uCAAG,4BAAAhZ,EAAA,sEACIuG,IAAU+S,QAAQ5T,EAAQ,EAAG,KADjC,OACV6T,EADU,OAEhBX,EAAQW,GAFQ,2CAAH,qDAKhB,QAAa3W,IAATyB,EACD,OAAQ,oCAAE,wBAAI4C,UAAU,eAAd,qFAGblE,QAAQC,IAAIqB,GAMZ,IALA,IAAMmV,EAAYT,EAEK1U,EAAKa,KAAKuU,QAAO,SAACnW,GAAD,OAAUA,EAAKyB,MAAQ,KADxCV,EAAKa,KAGxBwU,EAAQ,GAlCQ,WAmCXrQ,EAAKsQ,GACX,IAAMC,EAAYJ,EAASK,MAAMxQ,EAAGA,EARpB,GASVyQ,EAAW,CACF5U,KAAM0U,EACNjX,KAAa0G,EAAI,EAAK,KAAOA,EAAIuQ,EAAUrY,QAC3CoC,SAAWU,EAAKV,SAChBmR,QAAe,IAANzL,EACT4M,SAAU4C,IAAiBxP,EAC3B6M,WAAY,WAAQ4C,EAAgBzP,GAAImP,OAAe5V,IACvD+R,WAAYA,EACZwB,YAAaA,GAG5BuD,EAAMlU,KAAK,kBAACwQ,GAAD,eAAMjP,IAAKsC,GAAOyQ,MAbvBzQ,EAAE,EAAGsQ,EAAOH,EAASjY,OAAQ8H,EAAIsQ,EAAMtQ,GAP7B,EAO+C,EAAzDA,GAiBT,OAAS,yBAAKpC,UAAU,OACZ,wBAAIA,UAAU,QAAQ5C,EAAK1B,MAE3B,yBAAKsE,UAAU,kBAAmB5C,EAAKZ,aACvC,kBAAC,GAAD,CAAgBY,KAAMA,EAAM8R,YAAaA,EAAaqC,eAAiBA,EACpEC,YAAaA,EAAaC,sBAAuBA,IACpD,2BAAOzR,UAPA,uDAQJ,2BAAOA,UAAU,eACd,4BACG,2HACA,wBAAI+H,MAAO,CAAEC,SAAU,SAAvB,kCACA,4EAGLyK,I,kCCnZbK,GAAc,WAAO,IAAD,EACSrS,wBAAS9E,GADlB,mBAChBoX,EADgB,KACNC,EADM,KAEjBC,EAAUC,cAEhBtS,qBAAU,WACPuS,OAGH,IAAMA,EAAU,uCAAG,4BAAApa,EAAA,sEACOuG,IAAU8T,UADjB,OACVL,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAWhB,YAAqBpX,IAAboX,EAEI,0BAAM/S,UAAU,4BACb,kBAACqT,GAAD,MACA,kBAACC,GAAA,EAAD,CAAQC,QAAQ,kBAAhB,uEAIH,0BAAMvT,UAAU,eACb,kBAACsT,GAAA,EAAD,CAAQC,QAAQ,QAAQR,GACxB,kBAACO,GAAA,EAAD,CAAQC,QAAQ,iBAAiBhS,QAhB/B,WACdjC,IAAUkU,SACVR,OAAYrX,GACZsX,EAAQ1U,KAAK,OAaD,oCAKlB,SAAS8U,KAAS,IAAD,EACS5S,oBAAS,GADlB,mBACRqG,EADQ,KACF2M,EADE,OAEiBhT,qBAFjB,mBAERsS,EAFQ,KAEEC,EAFF,OAGiBvS,qBAHjB,mBAGR7E,EAHQ,KAGE8X,EAHF,OAIqBjT,oBAAS,GAJ9B,mBAIR5E,EAJQ,KAII8X,EAJJ,KAOd/S,qBAAU,eAMX,IAAMgT,EAAc,kBAAMH,GAAQ,IASlC,OACE,oCACE,kBAACH,GAAA,EAAD,CAAQC,QAAQ,UAAUhS,QAVX,kBAAMkS,GAAQ,KAU7B,4BAIA,kBAACI,GAAA,EAAD,CAAO/M,KAAMA,EAAMgN,OAAQF,GACzB,kBAACC,GAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,GAAA,EAAMI,MAAP,oFAEF,kBAACJ,GAAA,EAAMK,KAAP,KACC,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,GAAA,EAAKG,QAAN,CAAcjU,KAAK,QAAQC,YAAY,qBAAMwH,SAAW,SAAC7G,GAAD,OAAO+R,EAAY/R,EAAE8O,OAAOtW,WAGtF,kBAAC0a,GAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,GAAA,EAAKG,QAAN,CAAcjU,KAAK,WAAWC,YAAY,uCAASwH,SAAW,SAAC7G,GAAD,OAAOyS,EAAYzS,EAAE8O,OAAOtW,WAE5F,kBAAC0a,GAAA,EAAKC,MAAN,CAAYC,UAAU,qBACpB,kBAACF,GAAA,EAAKI,MAAN,CAAYlU,KAAK,WAAWwQ,MAAM,yDAAY/I,SAAU,SAAC7G,GAAD,OAAO0S,EAAc1S,EAAE8O,OAAOL,eAI3F,kBAACmE,GAAA,EAAMW,OAAP,KACE,kBAAClB,GAAA,EAAD,CAAQC,QAAQ,UAAUhS,QAAU,WAAQqS,IA/BjDtU,IAAUmV,MAAM1B,EAAUnX,EAAUC,GAAY+I,MAAK,WAClDoO,EAAYD,QA8BV,4BAGA,kBAACO,GAAA,EAAD,CAAQC,QAAQ,YAAYhS,QAASqS,GAArC,2C,IASJc,G,uKAEA,OACG,gCACG,yBAAK1U,UAAU,eACZ,yBAAKA,UAAU,OAAO2U,IAAI,qBAAqBC,IAAI,OAAO3D,MAAM,KAAK4D,OAAO,OAC5E,kBAAC,IAAD,CAAS9U,GAAG,IAAIC,UAAU,SAA1B,2DACA,kBAAC,IAAD,CAASD,GAAG,QAAQC,UAAU,SAA9B,6EACA,kBAAC,IAAD,CAASD,GAAG,SAASC,UAAU,SAA/B,iEACA,kBAAC,GAAD,Y,GATMC,IAAMC,WC/FrB4U,GAAY,WACf,OACG,yBAAK9U,UAAU,OACb,6BACG,kBAAC,GAAD,OAEH,6BACG,kBAAC,GAAD,CACEM,YAAY,GACZsH,WAAW,GACXlL,SAAS,QAEd,6BACG,kBAAC,GAAD,CACE4D,YAAY,GACZsH,WAAW,GACXlL,SAAS,UAKhBqY,GAAW,SAACtV,GACf,OAAO,kBAAC,GAAD,OCjBV,SAASuV,KACN,OACS,yBAAKhV,UAAU,eACZ,mCACA,mIAoBAiV,OAff,WAEE,OADInZ,QAAQC,IAAR,UAAeoC,kBAAf,MAEA,kBAAC,IAAD,KACG,kBAAC,GAAD,MACG,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO7C,KAAI,UAAK6C,kBAAL,KAAgC+W,UAAW1V,EAAY2V,OAAK,IACvE,kBAAC,IAAD,CAAO7Z,KAAI,UAAK6C,kBAAL,WAAsC+W,UAAW7D,KAC5D,kBAAC,IAAD,CAAO/V,KAAI,UAAK6C,kBAAL,SAAoC+W,UAAWH,KAC1D,kBAAC,IAAD,CAAOG,UAAWF,QCdXI,QACW,cAA7B5a,OAAO2X,SAASkD,UAEe,UAA7B7a,OAAO2X,SAASkD,UAEhB7a,OAAO2X,SAASkD,SAASrQ,MACvB,2DCXNsQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFtM,SAASuM,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhR,MAAK,SAAAiR,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLla,QAAQka,MAAMA,EAAMC,a","file":"static/js/main.616e4315.chunk.js","sourcesContent":["import Data from './deck/Data.json';\r\nimport Coca from './deck/Coca.json';\r\nimport Topik1 from './deck/Topik1.json';\r\nimport JapaneseWords from './deck/JapaneseWords.json';\r\nimport KorBooks from './deck/KorBooks.json';\r\nimport TextDecks from './deck/TextDecks.json' \r\n\r\n\r\nasync function* makeTextFileLineIterator(fileURL) {\r\n  const utf8Decoder = new TextDecoder('utf-8');\r\n  const response = await fetch(fileURL);\r\n  const reader = response.body.getReader();\r\n  let { value: chunk, done: readerDone } = await reader.read();\r\n  chunk = chunk ? utf8Decoder.decode(chunk) : '';\r\n\r\n  const re = /\\n|\\r|\\r\\n/gm;\r\n  let startIndex = 0;\r\n\r\n  for (;;) {\r\n    let result = re.exec(chunk);\r\n    if (!result) {\r\n      if (readerDone) {\r\n        break;\r\n      }\r\n      let remainder = chunk.substr(startIndex);\r\n      ({ value: chunk, done: readerDone } = await reader.read());\r\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '');\r\n      startIndex = re.lastIndex = 0;\r\n      continue;\r\n    }\r\n    yield chunk.substring(startIndex, result.index);\r\n    startIndex = re.lastIndex;\r\n  }\r\n  if (startIndex < chunk.length) {\r\n    // last line didn't end in a newline char\r\n    yield chunk.substr(startIndex);\r\n  }\r\n}\r\n\r\n/// --------- Local ----------------\r\n\r\nconst localStorage = window.localStorage;\r\n\r\n\r\n/*       \"Id\" : 1001,\r\n      \"Name\" : \"Пинбол-1973\",\r\n      \"Description\" : \"Слова из Пинбол-1973\",\r\n      \"Language\": \"ko\",\r\n      \"Rows\" : \r\n      */\r\nfunction getAllLocalData() {\r\n   return Data.concat(Topik1)\r\n              .concat(Coca)\r\n              .concat(JapaneseWords)\r\n              .concat(KorBooks)\r\n              ;\r\n}\r\n\r\n/*\r\n      \"Id\" : 2000,\r\n      \"Name\" : \"Pinball 1973\",\r\n      \"Language\": \"ko\",\r\n      \"File\": \"Pinball1973.txt\"\r\n*/\r\n\r\nfunction getTextData() {\r\n  return TextDecks\r\n}\r\n\r\nfunction getProperty(entity, id, propertyName) {\r\n   const path = `${entity}/${id}/${propertyName}`;\r\n   return localStorage.getItem(path);\r\n}\r\n\r\nfunction setProperty(entity, id, propertyName, value) {\r\n   const path = `${entity}/${id}/${propertyName}`;\r\n   localStorage.setItem(path, value);\r\n}\r\n\r\nclass LocalUser {\r\n   async getName() {\r\n      await setTimeout(200);\r\n      let name = localStorage.getItem('name');\r\n      return name === null ? undefined : name;\r\n   }\r\n\r\n   async login(name, password, rememberMe) {\r\n      console.log(`Login: ${name}, ${password}, ${rememberMe}`);\r\n      await setTimeout(500);\r\n      localStorage.setItem('name', name);\r\n      localStorage.setItem('rememberMe', rememberMe);\r\n      return true;\r\n   }\r\n   \r\n   logout() {\r\n      console.log('Logout');\r\n      localStorage.removeItem('name');\r\n      localStorage.removeItem('rememberMe');\r\n      return true;\r\n   }\r\n   \r\n   async register(name, email, password) {\r\n      console.log(`Register: ${name}, ${email}, ${password}`);\r\n      await setTimeout(500);\r\n      localStorage.setItem('name', name);\r\n      localStorage.setItem('email', email);\r\n      return true;\r\n   }\r\n   delete() {\r\n      console.log(`Deleted`);\r\n      localStorage.removeItem('name');\r\n      localStorage.removeItem('rememberMe');\r\n      return true;\r\n   }\r\n   \r\n   async getDeckList() {\r\n      await setTimeout(100);\r\n      const jsonDecks = getAllLocalData().map( (item, index) => {\r\n         return {\r\n            id: item.Id,\r\n            name: item.Name,\r\n            description: item.Description,\r\n            language: item.Language,\r\n            rowNumber: item.Rows.length\r\n         }\r\n      })\r\n      const textDecks = getTextData().map( (item) => {\r\n        return {\r\n           id: item.Id,\r\n           name: item.Name,\r\n           description: item.Description,\r\n           language: item.Language,\r\n           rowNumber: undefined,\r\n        }\r\n      })\r\n      return jsonDecks.concat(textDecks)\r\n   }\r\n   \r\n   async getDeck(id, fromRow, number) {\r\n      await setTimeout(100);\r\n      const data = getAllLocalData();\r\n      const deckData = data.find( (deck) => deck.Id === +id );\r\n      if (deckData === undefined) {\r\n        const deckDesc = getTextData().find( (deck) => deck.Id === +id )\r\n        if (deckDesc !== undefined) {\r\n          return this.getTextDeck(deckDesc)\r\n        }\r\n        else\r\n          return undefined\r\n      }\r\n      \r\n      const rowsWithId = deckData.Rows.map((item, index) => {\r\n         const wordId = id * 100000 + index;\r\n         const transScore = +getProperty(`word`, wordId, `translation_score`);\r\n         return {\r\n         id: wordId,\r\n         word: item[0],\r\n         meaning: item[1],\r\n         extra: item[2],\r\n         score: Math.floor(transScore) // + getProperty(`word`, wordId, `word_score`) ?? 0) / 2,\r\n         }\r\n      }); \r\n      return {\r\n         id: id,\r\n         name: deckData.Name,\r\n         description: deckData.Description,\r\n         language: deckData.Language,\r\n         rows: rowsWithId\r\n      };\r\n   }\r\n   \r\n   async getTextDeck(deckDesc) {\r\n     const url = `${process.env.PUBLIC_URL}/deck/${deckDesc.FileName}`\r\n     const rows = []\r\n     let index = 0\r\n     for await (let line of makeTextFileLineIterator(url)) {\r\n       if (line.length === 0 )\r\n         continue\r\n       const [word, meaning] = line.split('\\t')\r\n       const wordId = deckDesc.Id * 100000 + index\r\n       rows.push( {\r\n         id: wordId,\r\n         word: word,\r\n         meaning: meaning,\r\n         score: 0\r\n       })\r\n       ++index\r\n     }\r\n     return {\r\n       id: deckDesc.Id,\r\n       name: deckDesc.Name,\r\n       description: deckDesc.Description,\r\n       language: deckDesc.Language,\r\n       rows: rows\r\n     }\r\n\r\n  //   const res = await fetch()\r\n  //   console.log(res)\r\n  //   const rows = res.split('\\n').map((line, index) => {\r\n\r\n     //});\r\n\r\n   }\r\n\r\n}\r\n\r\nclass LocalDeck {\r\n   async changeInfo(deckId, name, description, language) {\r\n   }\r\n   \r\n   async addWord(deckId, word, translation, extra) {\r\n   }\r\n   \r\n   async changeWord(wordId, word, translation, extra) {\r\n   }\r\n   \r\n   async deleteWord(wordId) {\r\n   }\r\n}\r\n\r\nfunction getScoreAfterTest(prevScore, succeeded) {\r\n   let newScore = 0;\r\n   if (prevScore === 0)\r\n      newScore = prevScore + (succeeded ? 1 : -1);\r\n   else if (prevScore > 0)\r\n      newScore = !succeeded ? Math.trunc(prevScore / 2) : prevScore + 1;\r\n   else\r\n      newScore =  succeeded ? Math.trunc(prevScore / 2) : prevScore - 1;\r\n   return newScore;\r\n}\r\n\r\nclass LocalTest {\r\n   static setScore(scoreName, wordId, succeeded) {\r\n      const prevScore = getProperty('word', wordId, 'translation_score')?? 0;\r\n      const newScore = getScoreAfterTest(+prevScore, succeeded);\r\n      console.log(`${scoreName}, ${wordId}, ${succeeded}, ${prevScore}, ${newScore}`)\r\n      setProperty('word', wordId, 'translation_score', newScore);\r\n   }\r\n   \r\n   async setTranslationTestResult(wordId, succeeded) {\r\n      LocalTest.setScore('translation_score', wordId, succeeded);\r\n      return true;\r\n   }\r\n   \r\n   async setWordTestResult(wordId, succeeded) {\r\n      LocalTest.setScore('word_score', wordId, succeeded);\r\n      return true;\r\n   }\r\n}\r\n\r\n//-------------------\r\n\r\nfunction init() {\r\n   return [new LocalUser(), new LocalDeck(), new LocalTest()];\r\n}\r\n\r\nconst [user, deck, test] = init();\r\n\r\nfunction getUser() {\r\n   return user;\r\n}\r\n\r\nfunction getTest() {\r\n   return test;\r\n}\r\n\r\nfunction getDeck() {\r\n   return deck;\r\n}\r\n\r\n\r\nexport { getUser, getTest, getDeck };","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { getUser } from './User.js';\r\n\r\nclass MatrixList extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { decks: [] };\r\n   }\r\n   \r\n   async componentDidMount() {\r\n      const decks = await getUser().getDeckList();\r\n      this.setState({ decks: decks })\r\n   }\r\n\r\n   render() {\r\n      const rows = this.state.decks.map( (deck, index) =>\r\n         <tr key={index}>\r\n            <td><Link to={`/matrix?id=${deck.id}`}>{deck.name}</Link></td>\r\n            <td>{deck.description ?? ''}</td>\r\n            <td>{deck.language}</td>\r\n            <td className=\"text-right\">{deck.rowNumber ?? '?'}</td>\r\n         </tr>\r\n      );\r\n      return (\r\n         <table className=\"table table-nonfluid ml-1\">\r\n            <thead className=\"thead-light\">\r\n               <tr>\r\n                  <th>Название</th>\r\n                  <th>Описание</th>\r\n                  <th>Язык</th>\r\n                  <th>Кол-во записей</th>\r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows}\r\n            </tbody>\r\n         </table>\r\n      );\r\n   }\r\n}\r\n\r\nexport { MatrixList };","import React, { useState, useEffect } from \"react\";\r\nimport \"./Editable.css\";\r\n\r\nconst Editable = ({\r\n  text,\r\n  type,\r\n  placeholder,\r\n  children,\r\n  childRef,\r\n  ...props\r\n}) => {\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (childRef && childRef.current && isEditing === true) {\r\n      childRef.current.focus();\r\n    }\r\n  }, [isEditing, childRef]);\r\n\r\n  const handleKeyDown = (event, type) => {\r\n    const { key } = event;\r\n    const keys = [\"Escape\", \"Tab\"];\r\n    const enterKey = \"Enter\";\r\n    const allKeys = [...keys, enterKey];\r\n    if (\r\n      (type === \"textarea\" && keys.indexOf(key) > -1) ||\r\n      (type !== \"textarea\" && allKeys.indexOf(key) > -1)\r\n    ) {\r\n      setEditing(false);\r\n    }\r\n  };\r\n\r\n  //const styles = `rounded py-2 px-3 text-gray-700 leading-tight whitespace-pre-wrap hover:shadow-outline editable-${type}`;\r\n  return (\r\n    \r\n    <section {...props}>\r\n      {isEditing ? (\r\n        <div\r\n          onBlur={() => setEditing(false)}\r\n          onKeyDown={e => handleKeyDown(e, type)}\r\n        >\r\n          {children}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className={''}\r\n          onClick={() => setEditing(true)}\r\n        >\r\n          <span className={text ? \"text-black\" : \"text-muted font-italic small\"}>\r\n            {text || placeholder || \"Editable content\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Editable;","\r\nlet code_holder = '';\r\n\r\nfunction return_false() {\r\n    return false;\r\n}\r\n\r\n//New\r\nfunction release_selection(input) {\r\n   input.release_selection();\r\n   code_holder = '';\r\n}\r\n\r\nfunction clear_all(input) {\r\n   input.clear_all();\r\n   code_holder = '';\r\n}\r\n\r\nfunction replace_selection(input, str, highlight) {\r\n   input.replace_selection(str, highlight);\r\n}\r\n\r\n\r\n//--------------\r\n\r\nconst initial_table = [\"r\", \"R\", \"s\", \"e\", \"E\", \"f\", \"a\", \"q\", \"Q\", \"t\", \"T\", \"d\", \"w\", \"W\", \"c\", \"z\", \"x\", \"v\", \"g\"];\r\nconst medial_table = [\"k\", \"o\", \"i\", \"O\", \"j\", \"p\", \"u\", \"P\", \"h\", \"hk\", \"ho\", \"hl\", \"y\", \"n\", \"nj\", \"np\", \"nl\", \"b\", \"m\", \"ml\", \"l\"];\r\nconst final_table = [\"\", \"r\", \"R\", \"rt\", \"s\", \"sw\", \"sg\", \"e\", \"f\", \"fr\", \"fa\", \"fq\", \"ft\", \"fx\", \"fv\", \"fg\", \"a\", \"q\", \"qt\", \"t\", \"T\", \"d\", \"w\", \"c\", \"z\", \"x\", \"v\", \"g\"];\r\nconst jaso_table = [\"r\", \"R\", \"rt\", \"s\", \"sw\", \"sg\", \"e\", \"E\", \"f\", \"fr\", \"fa\", \"fq\", \"ft\", \"fx\", \"fv\", \"fg\", \"a\", \"q\", \"Q\", \"qt\", \"t\", \"T\", \"d\", \"w\", \"W\", \"c\", \"z\", \"x\", \"v\", \"g\", \"k\", \"o\", \"i\", \"O\", \"j\", \"p\", \"u\", \"P\", \"h\", \"hk\", \"ho\", \"hl\", \"y\", \"n\", \"nj\", \"np\", \"nl\", \"b\", \"m\", \"ml\", \"l\"];\r\n\r\n\r\nfunction compose_korean_char(input, alphabet) {\r\n    if (code_holder === '') {\r\n        for (let i = 0; i < jaso_table.length; i++) {\r\n            if (jaso_table[i] === alphabet) {\r\n                code_holder = String.fromCharCode(12593 + i);\r\n                replace_selection(input, code_holder, true);\r\n                return;\r\n            }\r\n        }\r\n    } else if (code_holder.charCodeAt(0) >= 44032 && code_holder.charCodeAt(0) < 44032 + 11172) {\r\n        var shift = code_holder.charCodeAt(0) - 44032;\r\n        var final_code = shift % 28;\r\n        var medial_code = (shift - final_code) / 28 % 21;\r\n        var initial_code = ((shift - final_code) / 28 - medial_code) / 21;\r\n        if (\"rRseEfaqQtTdwWczxvg\".indexOf(alphabet) !== -1) {\r\n            for (let i = 0; i < final_table.length; i++) {\r\n                if (final_table[i] === final_table[final_code] + alphabet) {\r\n                    code_holder = String.fromCharCode(initial_code * 588 + medial_code * 28 + i + 44032);\r\n                    replace_selection(input, code_holder, true);\r\n                    return;\r\n                }\r\n            }\r\n            replace_selection(input, code_holder, false);\r\n            for (let i = 0; i < jaso_table.length; i++) {\r\n                if (jaso_table[i] === alphabet) {\r\n                    code_holder = String.fromCharCode(12593 + i);\r\n                    replace_selection(input, code_holder, true);\r\n                    return;\r\n                }\r\n            }\r\n        } else if (\"koiOjpuPhynbml\".indexOf(alphabet) !== -1) {\r\n            if (final_table[final_code].length === 2) {\r\n                for (let i = 0; i < initial_table.length; i++) {\r\n                    if (initial_table[i] === final_table[final_code].charAt(1)) {\r\n                        for (let j = 0; j < medial_table.length; j++) {\r\n                            if (medial_table[j] === alphabet) {\r\n                                for (let k = 0; k < final_table.length; k++) {\r\n                                    if (final_table[k] === final_table[final_code].charAt(0)) {\r\n                                        replace_selection(input, String.fromCharCode(initial_code * 588 + medial_code * 28 + k + 44032), false);\r\n                                        code_holder = String.fromCharCode(i * 588 + j * 28 + 44032);\r\n                                        replace_selection(input, code_holder, true);\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (final_table[final_code].length === 1) {\r\n                for (let i = 0; i < initial_table.length; i++) {\r\n                    if (initial_table[i] === final_table[final_code]) {\r\n                        for (let j = 0; j < medial_table.length; j++) {\r\n                            if (medial_table[j] === alphabet) {\r\n                                replace_selection(input, String.fromCharCode(initial_code * 588 + medial_code * 28 + 0 + 44032), false);\r\n                                code_holder = String.fromCharCode(i * 588 + j * 28 + 44032);\r\n                                replace_selection(input, code_holder, true);\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                for (let i = 0; i < medial_table.length; i++) {\r\n                    if (medial_table[i] === medial_table[medial_code] + alphabet) {\r\n                        code_holder = String.fromCharCode(initial_code * 588 + i * 28 + 44032);\r\n                        replace_selection(input, code_holder, true);\r\n                        return;\r\n                    }\r\n                }\r\n                for (let i = 0; i < jaso_table.length; i++) {\r\n                    if (jaso_table[i] === alphabet) {\r\n                        release_selection(input);\r\n                        code_holder = String.fromCharCode(12593 + i);\r\n                        replace_selection(input, code_holder, true);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else if (code_holder.charCodeAt(0) >= 12593 && code_holder.charCodeAt(0) < 12644) {\r\n        if (\"koiOjpuPhynbml\".indexOf(alphabet) !== -1 && code_holder.charCodeAt(0) >= 12593 && code_holder.charCodeAt(0) < 12593 + 30) {\r\n            var tmp = jaso_table[code_holder.charCodeAt(0) - 12593];\r\n            for (var i = 0; i < initial_table.length; i++) {\r\n                if (initial_table[i] === tmp) {\r\n                    for (var j = 0; j < medial_table.length; j++) {\r\n                        if (medial_table[j] === alphabet) {\r\n                            code_holder = String.fromCharCode(i * 588 + j * 28 + 44032);\r\n                            replace_selection(input, code_holder, true);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < jaso_table.length; i++) {\r\n                if (jaso_table[i] === alphabet) {\r\n                    release_selection(input);\r\n                    code_holder = String.fromCharCode(12593 + i);\r\n                    replace_selection(input, code_holder, true);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 0; i < jaso_table.length; i++) {\r\n            if (jaso_table[i] === alphabet) {\r\n                release_selection(input);\r\n                code_holder = String.fromCharCode(12593 + i);\r\n                replace_selection(input, code_holder, true);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction key_down_korean(e, key, input_ctrl) {\r\n    switch (key) {\r\n        case 8:\r\n            if (code_holder !== '') {\r\n                if (code_holder.charCodeAt(0) >= 44032 && code_holder.charCodeAt(0) < 44032 + 11172) {\r\n                    var shift = code_holder.charCodeAt(0) - 44032;\r\n                    var final_code = shift % 28;\r\n                    var medial_code = (shift - final_code) / 28 % 21;\r\n                    var initial_code = ((shift - final_code) / 28 - medial_code) / 21;\r\n                    if (final_code !== 0) {\r\n                        for (let i = 0; i < final_table.length; i++) {\r\n                            if (final_table[i] === final_table[final_code].substring(0, final_table[final_code].length - 1)) {\r\n                                code_holder = String.fromCharCode(initial_code * 588 + medial_code * 28 + i + 44032);\r\n                                replace_selection(input_ctrl, code_holder, true);\r\n                                return return_false();\r\n                            }\r\n                        }\r\n                    } else if (medial_table[medial_code].length > 1) {\r\n                        for (let i = 0; i < medial_table.length; i++) {\r\n                            if (medial_table[i] === medial_table[medial_code].substring(0, medial_table[medial_code].length - 1)) {\r\n                                code_holder = String.fromCharCode(initial_code * 588 + i * 28 + 44032);\r\n                                replace_selection(input_ctrl, code_holder, true);\r\n                                return return_false();\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 0; i < jaso_table.length; i++) {\r\n                            if (jaso_table[i] === initial_table[initial_code]) {\r\n                                code_holder = String.fromCharCode(12593 + i);\r\n                                replace_selection(input_ctrl, code_holder, true);\r\n                                return return_false();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                release_selection(input_ctrl);\r\n            }\r\n            return true;\r\n        case 9:\r\n            release_selection(input_ctrl);\r\n            replace_selection(input_ctrl, '    ', false);\r\n            return return_false();\r\n        case 27:\r\n            clear_all(input_ctrl);\r\n            return return_false();\r\n        case 81:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'Q' : 'q');\r\n            return return_false();\r\n        case 87:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'W' : 'w');\r\n            return return_false();\r\n        case 69:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'E' : 'e');\r\n            return return_false();\r\n        case 82:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'R' : 'r');\r\n            return return_false();\r\n        case 84:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'T' : 't');\r\n            return return_false();\r\n        case 89:\r\n            compose_korean_char(input_ctrl, 'y');\r\n            return return_false();\r\n        case 85:\r\n            compose_korean_char(input_ctrl, 'u');\r\n            return return_false();\r\n        case 73:\r\n            compose_korean_char(input_ctrl, 'i');\r\n            return return_false();\r\n        case 79:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'O' : 'o');\r\n            return return_false();\r\n        case 80:\r\n            compose_korean_char(input_ctrl, e.shiftKey ? 'P' : 'p');\r\n            return return_false();\r\n        case 220:\r\n            if (!e.shiftKey) {\r\n                replace_selection(input_ctrl, '￦', false);\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 65:\r\n            compose_korean_char(input_ctrl, 'a');\r\n            return return_false();\r\n        case 83:\r\n            compose_korean_char(input_ctrl, 's');\r\n            return return_false();\r\n        case 68:\r\n            compose_korean_char(input_ctrl, 'd');\r\n            return return_false();\r\n        case 70:\r\n            compose_korean_char(input_ctrl, 'f');\r\n            return return_false();\r\n        case 71:\r\n            compose_korean_char(input_ctrl, 'g');\r\n            return return_false();\r\n        case 72:\r\n            compose_korean_char(input_ctrl, 'h');\r\n            return return_false();\r\n        case 74:\r\n            compose_korean_char(input_ctrl, 'j');\r\n            return return_false();\r\n        case 75:\r\n            compose_korean_char(input_ctrl, 'k');\r\n            return return_false();\r\n        case 76:\r\n            compose_korean_char(input_ctrl, 'l');\r\n            return return_false();\r\n        case 90:\r\n            compose_korean_char(input_ctrl, 'z');\r\n            return return_false();\r\n        case 88:\r\n            compose_korean_char(input_ctrl, 'x');\r\n            return return_false();\r\n        case 67:\r\n            compose_korean_char(input_ctrl, 'c');\r\n            return return_false();\r\n        case 86:\r\n            compose_korean_char(input_ctrl, 'v');\r\n            return return_false();\r\n        case 66:\r\n            compose_korean_char(input_ctrl, 'b');\r\n            return return_false();\r\n        case 78:\r\n            compose_korean_char(input_ctrl, 'n');\r\n            return return_false();\r\n        case 77:\r\n            compose_korean_char(input_ctrl, 'm');\r\n            return return_false();\r\n        case 16:\r\n            return true;\r\n        default:\r\n            release_selection(input_ctrl);\r\n    }\r\n}\r\n\r\nfunction key_down(e, input_ctrl) {\r\n   var key = e.which ? e.which : e.keyCode;\r\n   return key_down_korean(e, key, input_ctrl)\r\n}\r\n\r\nexport {key_down}","import $ from 'jquery';\r\nimport { createPopper } from '@popperjs/core';\r\n\r\n\r\nconst disp_number = 10;  // 10 words a page\r\n\r\nlet code_holder = '';  //  symbols yet input\r\nlet left_yinhao1 = false; // ' quotes\r\nlet left_yinhao2 = false; // \" quotes\r\n\r\nfunction return_false() {\r\n    return false;\r\n}\r\n\r\n//New\r\nfunction release_selection(input) {\r\n   input.release_selection();\r\n   input.callback.hide_popup();\r\n   code_holder = '';\r\n}\r\n\r\nfunction clear_all(input) {\r\n   input.clear_all();\r\n   input.callback.hide_popup();\r\n   code_holder = '';\r\n}\r\n\r\nfunction replace_selection(input, str, highlight) {\r\n   input.replace_selection(str, highlight);\r\n}\r\n\r\n\r\n/*\r\nconst InputMode = Object.freeze({\r\n   HIRAGANA: 1,\r\n   KATAKANA: 2,\r\n   ENGLISH_FULLWIDTH: 3,\r\n   ENGLISH_HALFWIDHT: 4\r\n});*/\r\n\r\nfunction display_words(direction) {\r\n    alert('Not implemented');\r\n}\r\n\r\nclass Callback {\r\n   constructor(input_ctrl) {\r\n      this.word_lists = undefined; // 2D array\r\n      this.splits = undefined; // 1D array\r\n      this.page_number = undefined;\r\n      this.list_index = 0;\r\n      this.input = input_ctrl.input;\r\n      this.input_ctrl = input_ctrl;\r\n      this.show_hiragana = true;\r\n   }\r\n   // have a selection\r\n   is_word_div_visible() {  // $('.word_div:visible').length > 0\r\n      return this.words_in_list() > 0;\r\n   }\r\n   // get the currently selected word\r\n   get_word_div_visible() {\r\n      return $('.word', this.menu).index($('.active'))\r\n   }\r\n   // get the number of words in the popup (current page)\r\n   words_in_list() {\r\n      return $('.word', this.menu).length;\r\n   }\r\n   \r\n   insert_word(index) {\r\n      const text = $('.word').eq(index).data('text');\r\n      replace_selection(this.input_ctrl, text, false);\r\n      code_holder = code_holder.substr(this.splits[this.list_index].length);\r\n      replace_selection(this.input_ctrl, code_holder, true);\r\n      ++this.list_index;\r\n      if (this.list_index < this.word_lists.length) {\r\n         display_words(\"next\");\r\n      } else {\r\n         this.hide_popup();\r\n      }\r\n   }\r\n\r\n   prev_page() {\r\n      if(this.menu === undefined)\r\n         return;\r\n      if(this.page_number === 0)\r\n         return;\r\n      --this.page_number;\r\n      $('.dropdown-item', this.menu).remove();\r\n      this.populateMenu(this.menu);\r\n      this.highlight_word(\"first\");\r\n   }\r\n   next_page() {\r\n      if(this.menu === undefined)\r\n         return;\r\n      if((this.page_number + 1) * disp_number > this.word_lists[this.list_index].length)\r\n         return;\r\n      $('.dropdown-item', this.menu).remove();\r\n      ++this.page_number;\r\n      this.populateMenu(this.menu);\r\n      this.highlight_word(\"first\");\r\n   }\r\n\r\n   show_popup(word) {\r\n      fetch(\"https://www.inputking.com/ime/getwords.php?&p1=japanese&p2=\" + word + \"&is_vip=\",\r\n         {\r\n            method: 'GET',\r\n            cors: 'no-cors',\r\n            referrerPolicy: \"no-referrer\",\r\n            headers: {\r\n               'Content-Type': 'application/x-javascript',\r\n            }\r\n         }\r\n      )\r\n      .then(response => { \r\n         return response.text();\r\n      })\r\n      .then(data => {\r\n          const reWords = /words\\[\\d+\\]=\\[(.*?)\\]/g;\r\n          const reSplits = /splits=\\[(.*?)\\]/;\r\n          let word_lists = [];\r\n          for(let word of data.matchAll(reWords)) {\r\n             const words = word[1].split(\",\").map( w => w.substr(1, w.length - 2) );\r\n             //console.log(words);\r\n             word_lists.push(words);\r\n          }\r\n          const splitWord = data.match(reSplits);\r\n          const splits = splitWord[1].split(\",\").map( w => w.substr(1, w.length - 2) );\r\n        //  console.log(`splits: ${splits}`);\r\n          this.createMenu(word_lists, typeof splits == String ? [splits] : splits);\r\n      });\r\n   }\r\n   hide_popup() {\r\n      if(this.menu)\r\n         this.menu.remove();\r\n      this.menu = undefined;\r\n      this.splits = undefined;\r\n      this.word_lists = undefined;\r\n      this.list_index = undefined;\r\n   }\r\n\r\n   highlight_word(which) {\r\n      switch(which) {\r\n      case \"first\":\r\n         $('.word', this.menu).removeClass('active');\r\n         $('.word', this.menu).eq(0).addClass('active');\r\n         break;\r\n      case \"last\":\r\n      case \"prev\": {\r\n            const all = $('.word, .active', this.menu);\r\n            const index = all.index();\r\n            $('.word', this.menu).removeClass('active');\r\n            if(index > 0)\r\n               all.eq(index-1).addClass('active');\r\n            else\r\n               this.prev_page();\r\n         }\r\n         break;\r\n      case \"next\": {\r\n            const all = $('.word, .active', this.menu);\r\n            const index = all.index();\r\n            $('.word', this.menu).removeClass('active');\r\n            if(index < all.length - 1)\r\n               $('.word', this.menu).eq(index+1).addClass('active');\r\n            else\r\n               this.next_page();\r\n         }\r\n         break;\r\n      default:\r\n      }\r\n   }\r\n   \r\n   ////  internals  \r\n   populateMenu(menu) {\r\n      const startWordIndex = this.page_number * disp_number;\r\n      const endWordIndex = Math.min((this.page_number + 1) * disp_number,\r\n                                    this.word_lists[this.list_index].length);\r\n      if(this.page_number > 0) {\r\n         const pageUp = $(`<button class=\"pageup\">&#x2BC5;<span class=\"border rounded ml-1\"><kbd>PgUp</<kbd></span></button>`);\r\n         pageUp.addClass('dropdown-item')\r\n               .css('padding', '0.25rem 0.5rem');\r\n         menu.append(pageUp);\r\n      }\r\n      for(let i = startWordIndex; i < endWordIndex; ++i) {\r\n         const index = (i - startWordIndex + 1) % disp_number;\r\n         const itemText = this.word_lists[this.list_index][i];\r\n         const link = $(`<a href='#'><small>${index}. </small>${itemText}</a>`);\r\n         link.addClass('dropdown-item')\r\n             .addClass('word')\r\n             .data('text', itemText)\r\n             .css('padding', '0.25rem 0.5rem');\r\n         link.click( (e) => {\r\n            $(menu).remove();\r\n         });\r\n         menu.append(link);\r\n      }\r\n      if((this.page_number + 1) * disp_number < this.word_lists[this.list_index].length) {\r\n         const pageDn = $(`<button class=\"pagedown\">&#x2BC6;<span class=\"border rounded ml-1\"><kbd>PgDn</<kbd></span></button>`);\r\n         pageDn.addClass('dropdown-item')\r\n               .css('padding', '0.25rem 0.5rem');\r\n         menu.append(pageDn);\r\n      }\r\n      $(\".pageup\", menu).click(e => {\r\n         this.prev_page();\r\n      });\r\n      $(\".pagedown\", menu).click(e => {\r\n         this.next_page();\r\n      });\r\n   }\r\n   \r\n   createMenu(word_lists, splits) {\r\n      this.word_lists = word_lists;\r\n      this.splits = splits;\r\n      this.page_number = 0;\r\n      this.list_index = 0;\r\n\r\n      let menu = $('<div/>');\r\n      menu.addClass('bg-white').addClass('border');\r\n      menu.css('z-index', 3000);\r\n      this.populateMenu(menu);\r\n      \r\n      $(this.input).after(menu);\r\n      this.menu = menu;\r\n      this.highlight_word(\"first\");\r\n\r\n      createPopper($(this.input)[0], $(menu)[0], {\r\n         placement: 'bottom',\r\n      });\r\n   }\r\n}\r\n\r\n\r\n//------------------------------------\r\n\r\nconst key_en = \"`1234567890-=qwertyuiop[]\\\\asdfghjkl;'zxcvbnm,./\";\r\nconst key_char_quan = \"｀１２３４５６７８９０－＝ｑｗｅｒｔｙｕｉｏｐ［］＼ａｓｄｆｇｈｊｋｌ；＇ｚｘｃｖｂｎｍ，．／\";\r\nconst romaji_array = [\r\n    ['ａ', 'あ', 'ア'],\r\n    ['ｉ', 'い', 'イ'],\r\n    ['ｙｉ', 'い', 'イ'],\r\n    ['ｕ', 'う', 'ウ'],\r\n    ['ｗｕ', 'う', 'ウ'],\r\n    ['ｗｈｕ', 'う', 'ウ'],\r\n    ['ｅ', 'え', 'エ'],\r\n    ['ｏ', 'お', 'オ'],\r\n    ['ｘａ', 'ぁ', 'ァ'],\r\n    ['ｌａ', 'ぁ', 'ァ'],\r\n    ['ｘｉ', 'ぃ', 'ィ'],\r\n    ['ｌｉ', 'ぃ', 'ィ'],\r\n    ['ｌｙｉ', 'ぃ', 'ィ'],\r\n    ['ｘｙｉ', 'ぃ', 'ィ'],\r\n    ['ｘｕ', 'ぅ', 'ゥ'],\r\n    ['ｌｕ', 'ぅ', 'ゥ'],\r\n    ['ｘｅ', 'ぇ', 'ェ'],\r\n    ['ｌｅ', 'ぇ', 'ェ'],\r\n    ['ｌｙｅ', 'ぇ', 'ェ'],\r\n    ['ｘｙｅ', 'ぇ', 'ェ'],\r\n    ['ｘｏ', 'ぉ', 'ォ'],\r\n    ['ｌｏ', 'ぉ', 'ォ'],\r\n    ['ｗｉ', 'うぃ', 'ウィ'],\r\n    ['ｗｅ', 'うぇ', 'ウェ'],\r\n    ['ｖｕ', 'ヴ', 'ヴ'],\r\n    ['ｖａ', 'ヴぁ', 'ヴァ'],\r\n    ['ｖｉ', 'ヴぃ', 'ヴィ'],\r\n    ['ｖｙｉ', 'ヴぃ', 'ヴィ'],\r\n    ['ｖｅ', 'ヴぇ', 'ヴェ'],\r\n    ['ｖｙｅ', 'ヴぇ', 'ヴェ'],\r\n    ['ｖｏ', 'ヴぉ', 'ヴォ'],\r\n    ['ｋａ', 'か', 'カ'],\r\n    ['ｃａ', 'か', 'カ'],\r\n    ['ｋｉ', 'き', 'キ'],\r\n    ['ｋｕ', 'く', 'ク'],\r\n    ['ｃｕ', 'く', 'ク'],\r\n    ['ｑｕ', 'く', 'ク'],\r\n    ['ｋｅ', 'け', 'ケ'],\r\n    ['ｋｏ', 'こ', 'コ'],\r\n    ['ｃｏ', 'こ', 'コ'],\r\n    ['ｋｙａ', 'きゃ', 'キャ'],\r\n    ['ｋｙｉ', 'きぃ', 'キィ'],\r\n    ['ｋｙｕ', 'きゅ', 'キュ'],\r\n    ['ｋｙｅ', 'きぇ', 'キェ'],\r\n    ['ｋｙｏ', 'きょ', 'キョ'],\r\n    ['ｇａ', 'が', 'ガ'],\r\n    ['ｇｉ', 'ぎ', 'ギ'],\r\n    ['ｇｕ', 'ぐ', 'グ'],\r\n    ['ｇｅ', 'げ', 'ゲ'],\r\n    ['ｇｏ', 'ご', 'ゴ'],\r\n    ['ｇｙａ', 'ぎゃ', 'ギャ'],\r\n    ['ｇｙｉ', 'ぎぃ', 'ギィ'],\r\n    ['ｇｙｕ', 'ぎゅ', 'ギュ'],\r\n    ['ｇｙｅ', 'ぎぇ', 'ギェ'],\r\n    ['ｇｙｏ', 'ぎょ', 'ギョ'],\r\n    ['ｓａ', 'さ', 'サ'],\r\n    ['ｓｉ', 'し', 'シ'],\r\n    ['ｃｉ', 'し', 'シ'],\r\n    ['ｓｈｉ', 'し', 'シ'],\r\n    ['ｓｕ', 'す', 'ス'],\r\n    ['ｓｅ', 'せ', 'セ'],\r\n    ['ｃｅ', 'せ', 'セ'],\r\n    ['ｓｏ', 'そ', 'ソ'],\r\n    ['ｓｙａ', 'しゃ', 'シャ'],\r\n    ['ｓｈａ', 'しゃ', 'シャ'],\r\n    ['ｓｙｉ', 'しぃ', 'シィ'],\r\n    ['ｓｙｕ', 'しゅ', 'シュ'],\r\n    ['ｓｈｕ', 'しゅ', 'シュ'],\r\n    ['ｓｙｅ', 'しぇ', 'シェ'],\r\n    ['ｓｈｅ', 'しぇ', 'シェ'],\r\n    ['ｓｙｏ', 'しょ', 'ショ'],\r\n    ['ｓｈｏ', 'しょ', 'ショ'],\r\n    ['ｚａ', 'ざ', 'ザ'],\r\n    ['ｚｉ', 'じ', 'ジ'],\r\n    ['ｊｉ', 'じ', 'ジ'],\r\n    ['ｚｕ', 'ず', 'ズ'],\r\n    ['ｚｅ', 'ぜ', 'ゼ'],\r\n    ['ｚｏ', 'ぞ', 'ゾ'],\r\n    ['ｚｙａ', 'じゃ', 'ジャ'],\r\n    ['ｊａ', 'じゃ', 'ジャ'],\r\n    ['ｊｙａ', 'じゃ', 'ジャ'],\r\n    ['ｚｙｉ', 'じぃ', 'ジィ'],\r\n    ['ｊｙｉ', 'じぃ', 'ジィ'],\r\n    ['ｚｙｕ', 'じゅ', 'ジュ'],\r\n    ['ｊｕ', 'じゅ', 'ジュ'],\r\n    ['ｊｙｕ', 'じゅ', 'ジュ'],\r\n    ['ｚｙｅ', 'じぇ', 'ジェ'],\r\n    ['ｊｅ', 'じぇ', 'ジェ'],\r\n    ['ｊｙｅ', 'じぇ', 'ジェ'],\r\n    ['ｚｙｏ', 'じょ', 'ジョ'],\r\n    ['ｊｏ', 'じょ', 'ジョ'],\r\n    ['ｊｙｏ', 'じょ', 'ジョ'],\r\n    ['ｔａ', 'た', 'タ'],\r\n    ['ｔｉ', 'ち', 'チ'],\r\n    ['ｃｈｉ', 'ち', 'チ'],\r\n    ['ｔｕ', 'つ', 'ツ'],\r\n    ['ｔｓｕ', 'つ', 'ツ'],\r\n    ['ｔｅ', 'て', 'テ'],\r\n    ['ｔｏ', 'と', 'ト'],\r\n    ['ｔｙａ', 'ちゃ', 'チャ'],\r\n    ['ｃｈａ', 'ちゃ', 'チャ'],\r\n    ['ｃｙａ', 'ちゃ', 'チャ'],\r\n    ['ｔｙｉ', 'ちぃ', 'チィ'],\r\n    ['ｃｙｉ', 'ちぃ', 'チィ'],\r\n    ['ｔｙｕ', 'ちゅ', 'チュ'],\r\n    ['ｃｈｕ', 'ちゅ', 'チュ'],\r\n    ['ｃｙｕ', 'ちゅ', 'チュ'],\r\n    ['ｔｙｅ', 'ちぇ', 'チェ'],\r\n    ['ｃｈｅ', 'ちぇ', 'チェ'],\r\n    ['ｃｙｅ', 'ちぇ', 'チェ'],\r\n    ['ｔｙｏ', 'ちょ', 'チョ'],\r\n    ['ｃｈｏ', 'ちょ', 'チョ'],\r\n    ['ｃｙｏ', 'ちょ', 'チョ'],\r\n    ['ｘｔｕ', 'っ', 'ッ'],\r\n    ['ｌｔｕ', 'っ', 'ッ'],\r\n    ['ｌｔｓｕ', 'っ', 'ッ'],\r\n    ['ｔｈｉ', 'てぃ', 'ティ'],\r\n    ['ｔｈｕ', 'てゅ', 'テュ'],\r\n    ['ｔｈｅ', 'てぇ', 'テェ'],\r\n    ['ｔｈｏ', 'てょ', 'テョ'],\r\n    ['ｄａ', 'だ', 'ダ'],\r\n    ['ｄｉ', 'ぢ', 'ヂ'],\r\n    ['ｄｕ', 'づ', 'ヅ'],\r\n    ['ｄｅ', 'で', 'デ'],\r\n    ['ｄｏ', 'ど', 'ド'],\r\n    ['ｄｙａ', 'ぢゃ', 'ヂャ'],\r\n    ['ｄｙｉ', 'ぢぃ', 'ヂィ'],\r\n    ['ｄｙｕ', 'ぢゅ', 'ヂュ'],\r\n    ['ｄｙｅ', 'ぢぇ', 'ヂェ'],\r\n    ['ｄｙｏ', 'ぢょ', 'ヂョ'],\r\n    ['ｄｈａ', 'でゃ', 'デャ'],\r\n    ['ｄｈｉ', 'でぃ', 'ディ'],\r\n    ['ｄｈｕ', 'でゅ', 'デュ'],\r\n    ['ｄｈｅ', 'でぇ', 'デェ'],\r\n    ['ｄｈｏ', 'でょ', 'デョ'],\r\n    ['ｎａ', 'な', 'ナ'],\r\n    ['ｎｉ', 'に', 'ニ'],\r\n    ['ｎｕ', 'ぬ', 'ヌ'],\r\n    ['ｎｅ', 'ね', 'ネ'],\r\n    ['ｎｏ', 'の', 'ノ'],\r\n    ['ｎｙａ', 'にゃ', 'ニャ'],\r\n    ['ｎｙｉ', 'にぃ', 'ニィ'],\r\n    ['ｎｙｕ', 'にゅ', 'ニュ'],\r\n    ['ｎｙｅ', 'にぇ', 'ニェ'],\r\n    ['ｎｙｏ', 'にょ', 'ニョ'],\r\n    ['ｈａ', 'は', 'ハ'],\r\n    ['ｈｉ', 'ひ', 'ヒ'],\r\n    ['ｈｕ', 'ふ', 'フ'],\r\n    ['ｆｕ', 'ふ', 'フ'],\r\n    ['ｈｅ', 'へ', 'ヘ'],\r\n    ['ｈｏ', 'ほ', 'ホ'],\r\n    ['ｈｙａ', 'ひゃ', 'ヒャ'],\r\n    ['ｈｙｉ', 'ひぃ', 'ヒィ'],\r\n    ['ｈｙｕ', 'ひゅ', 'ヒュ'],\r\n    ['ｈｙｅ', 'ひぇ', 'ヒェ'],\r\n    ['ｈｙｏ', 'ひょ', 'ヒョ'],\r\n    ['ｆｙａ', 'ふゃ', 'フャ'],\r\n    ['ｆｙｕ', 'ふゅ', 'フュ'],\r\n    ['ｆｙｏ', 'ふょ', 'フョ'],\r\n    ['ｆａ', 'ふぁ', 'ファ'],\r\n    ['ｆｉ', 'ふぃ', 'フィ'],\r\n    ['ｆｙｉ', 'ふぃ', 'フィ'],\r\n    ['ｆｅ', 'ふぇ', 'フェ'],\r\n    ['ｆｙｅ', 'ふぇ', 'フェ'],\r\n    ['ｆｏ', 'ふぉ', 'フォ'],\r\n    ['ｂａ', 'ば', 'バ'],\r\n    ['ｂｉ', 'び', 'ビ'],\r\n    ['ｂｕ', 'ぶ', 'ブ'],\r\n    ['ｂｅ', 'べ', 'ベ'],\r\n    ['ｂｏ', 'ぼ', 'ボ'],\r\n    ['ｂｙａ', 'びゃ', 'ビャ'],\r\n    ['ｂｙｉ', 'びぃ', 'ビィ'],\r\n    ['ｂｙｕ', 'びゅ', 'ビュ'],\r\n    ['ｂｙｅ', 'びぇ', 'ビェ'],\r\n    ['ｂｙｏ', 'びょ', 'ビョ'],\r\n    ['ｖａ', 'ヴぁ', 'ヴァ'],\r\n    ['ｖｉ', 'ヴぃ', 'ヴィ'],\r\n    ['ｖｕ', 'ヴ', 'ヴ'],\r\n    ['ｖｅ', 'ヴぇ', 'ヴェ'],\r\n    ['ｖｏ', 'ヴぉ', 'ヴォ'],\r\n    ['ｐａ', 'ぱ', 'パ'],\r\n    ['ｐｉ', 'ぴ', 'ピ'],\r\n    ['ｐｕ', 'ぷ', 'プ'],\r\n    ['ｐｅ', 'ぺ', 'ペ'],\r\n    ['ｐｏ', 'ぽ', 'ポ'],\r\n    ['ｐｙａ', 'ぴゃ', 'ピャ'],\r\n    ['ｐｙｉ', 'ぴぃ', 'ピィ'],\r\n    ['ｐｙｕ', 'ぴゅ', 'ピュ'],\r\n    ['ｐｙｅ', 'ぴぇ', 'ピェ'],\r\n    ['ｐｙｏ', 'ぴょ', 'ピョ'],\r\n    ['ｍａ', 'ま', 'マ'],\r\n    ['ｍｉ', 'み', 'ミ'],\r\n    ['ｍｕ', 'む', 'ム'],\r\n    ['ｍｅ', 'め', 'メ'],\r\n    ['ｍｏ', 'も', 'モ'],\r\n    ['ｍｙａ', 'みゃ', 'ミャ'],\r\n    ['ｍｙｉ', 'みぃ', 'ミィ'],\r\n    ['ｍｙｕ', 'みゅ', 'ミュ'],\r\n    ['ｍｙｅ', 'みぇ', 'ミェ'],\r\n    ['ｍｙｏ', 'みょ', 'ミョ'],\r\n    ['ｙａ', 'や', 'ヤ'],\r\n    ['ｙｕ', 'ゆ', 'ユ'],\r\n    ['ｙｏ', 'よ', 'ヨ'],\r\n    ['ｘｙａ', 'ゃ', 'ャ'],\r\n    ['ｌｙａ', 'ゃ', 'ャ'],\r\n    ['ｘｙｕ', 'ゅ', 'ュ'],\r\n    ['ｌｙｕ', 'ゅ', 'ュ'],\r\n    ['ｘｙｏ', 'ょ', 'ョ'],\r\n    ['ｌｙｏ', 'ょ', 'ョ'],\r\n    ['ｒａ', 'ら', 'ラ'],\r\n    ['ｒｉ', 'り', 'リ'],\r\n    ['ｒｕ', 'る', 'ル'],\r\n    ['ｒｅ', 'れ', 'レ'],\r\n    ['ｒｏ', 'ろ', 'ロ'],\r\n    ['ｒｙａ', 'りゃ', 'リャ'],\r\n    ['ｒｙｉ', 'りぃ', 'リィ'],\r\n    ['ｒｙｕ', 'りゅ', 'リュ'],\r\n    ['ｒｙｅ', 'りぇ', 'リェ'],\r\n    ['ｒｙｏ', 'りょ', 'リョ'],\r\n    ['ｗａ', 'わ', 'ワ'],\r\n    ['ｗｏ', 'を', 'ヲ'],\r\n    ['ｎｎ', 'ん', 'ン'],\r\n    ['ｎ＇', 'ん', 'ン'],\r\n    ['ｘｎ', 'ん', 'ン'],\r\n    ['ｘｗａ', 'ゎ', 'ヮ'],\r\n    ['ｌｗａ', 'ゎ', 'ヮ']\r\n];\r\n\r\nfunction alphabet_to_kana(input, char, show_hiragana) {\r\n    if(show_hiragana === undefined) alert(\"No kana parameter defined\");\r\n    const show_katakana = !show_hiragana;\r\n    let i = 0;\r\n    for (; i < code_holder.length; i++) {\r\n        if (key_char_quan.indexOf(code_holder.substr(i, 1)) !== -1) break;\r\n    }\r\n    if (show_katakana && char === \"ー\" && i === code_holder.length) {\r\n        code_holder += \"ー\";\r\n        replace_selection(input, code_holder, true);\r\n        return;\r\n    } else {\r\n        if (i < code_holder.length) {\r\n            var head_str = code_holder.substr(0, i);\r\n            var rear_str = code_holder.substr(i);\r\n            if (rear_str === char && char !== \"ｎ\") {\r\n                code_holder += char;\r\n                replace_selection(input, code_holder, true);\r\n                return;\r\n            }\r\n            if (rear_str === \"ｎ\" && char !== \"ａ\" && char !== \"ｉ\" && char !== \"ｕ\" && char !== \"ｅ\" && char !== \"ｏ\" && char !== \"ｙ\" && char !== \"ｎ\") {\r\n                code_holder = head_str + (show_hiragana ? \"ん\" : \"ン\") + char;\r\n                replace_selection(input, code_holder, true);\r\n                return;\r\n            } else if (rear_str.length >= 2 && rear_str.substr(0, 1) === rear_str.substr(1, 1)) {\r\n                const kana = find_hiragana(rear_str.substr(1) + char, show_hiragana);\r\n                if (kana !== \"\") {\r\n                    code_holder = head_str + (show_hiragana ? \"っ\" : \"ッ\") + kana;\r\n                    replace_selection(input, code_holder, true);\r\n                } else check_romaji(input, rear_str.substr(1) + char);\r\n                return;\r\n            } else {\r\n                const kana = find_hiragana(rear_str + char, show_hiragana);\r\n                if (kana !== \"\") {\r\n                    code_holder = head_str + kana;\r\n                    replace_selection(input, code_holder, true);\r\n                } else check_romaji(input, rear_str + char);\r\n            }\r\n        } else {\r\n            const kana = find_hiragana(char, show_hiragana);\r\n            if (kana !== \"\") code_holder += kana;\r\n            else code_holder += char;\r\n            replace_selection(input, code_holder, true);\r\n        }\r\n    }\r\n}\r\n\r\nfunction find_hiragana(str, show_hiragana) {\r\n    if(show_hiragana===undefined) alert(\"No kana parameter defined\"); // temp, delete after testing\r\n    if (show_hiragana) {\r\n        for (let i = 0; i < romaji_array.length; i++) {\r\n            if (romaji_array[i][0] === str) return romaji_array[i][1];\r\n        }\r\n    } else { // katakana\r\n        for (let i = 0; i < romaji_array.length; i++) {\r\n            if (romaji_array[i][0] === str) return romaji_array[i][2];\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction check_romaji(input, str) {\r\n    for (var i = 0; i < romaji_array.length; i++) {\r\n        if (romaji_array[i][0].indexOf(str) === 0) {\r\n            code_holder += str.substr(str.length - 1, 1);\r\n            replace_selection(input, code_holder, true);\r\n            return;\r\n        }\r\n    }\r\n    $('#key_error').show(); // error romaji symbol\r\n}\r\n\r\n\r\nfunction key_down_japanese(e, key, input_ctrl, callback) {\r\n    const show_hiragana = callback.show_hiragana;\r\n    switch (key) {\r\n        case 8:\r\n            if (code_holder !== '') {\r\n                code_holder = code_holder.substr(0, code_holder.length - 1);\r\n                replace_selection(input_ctrl, code_holder, true);\r\n                //$('#word_list').hide();\r\n                callback.hide_popup();\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 9:\r\n            if (code_holder === '') replace_selection(input_ctrl, '    ', false);\r\n            return return_false();\r\n        case 27:\r\n            clear_all(input_ctrl);\r\n            return return_false();\r\n        case 33:  // page up\r\n            if (code_holder !== '') {\r\n                //if ($('#last_list').is(':visible')) last_page();\r\n                callback.prev_page();\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 34:  // page down\r\n            if (code_holder !== '') {\r\n                //if ($('#next_list').is(':visible')) next_page();\r\n                callback.next_page();\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 32:  // space\r\n            if (code_holder !== '') {\r\n                if (!callback.is_word_div_visible()) {\r\n                    if (show_hiragana) {\r\n                        var str = \"\";\r\n                        for (let i = 0; i < code_holder.length; i++) {\r\n                            for (let j = 0; j < romaji_array.length; j++) {\r\n                                if (romaji_array[j][1] === code_holder.substr(i, 1)) {\r\n                                    str += romaji_array[j][0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        let p2 = \"\";\r\n                        for (let i = 0; i < str.length; i++) {\r\n                            p2 += key_en.substr(key_char_quan.indexOf(str.substr(i, 1)), 1);\r\n                        }\r\n                        callback.show_popup(p2);\r\n                    }\r\n                } else {\r\n                    callback.highlight_word('next');\r\n                }\r\n            } else replace_selection(input_ctrl, '　', false);\r\n            return return_false();\r\n        case 13:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n                return return_false();\r\n            } else if (code_holder !== '') {\r\n                release_selection(input_ctrl);\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 17:\r\n            return true;\r\n        case 38:  // up arrow\r\n            if (callback.is_word_div_visible()) {\r\n                callback.highlight_word('last');\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 40:  // down arrow\r\n            if (callback.is_word_div_visible()) {\r\n                callback.highlight_word('next');\r\n                return return_false();\r\n            }\r\n            return true;\r\n        case 37:\r\n        case 39:\r\n        case 46:\r\n        case 36:\r\n        case 35:\r\n            if (code_holder !== '') return return_false();\r\n            return true;\r\n        case 192:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '～' : '‘', false);\r\n            return return_false();\r\n        case 49:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '！', false);\r\n            } else {\r\n                if (callback.is_word_div_visible()) callback.insert_word(0);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '１', false);\r\n            }\r\n            return return_false();\r\n        case 50:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '＠', false);\r\n            } else {\r\n                if (callback.words_in_list() > 1) callback.insert_word(1);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '２', false);\r\n            }\r\n            return return_false();\r\n        case 51:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '＃', false);\r\n            } else {\r\n                if (callback.words_in_list() > 2) callback.insert_word(2);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '３', false);\r\n            }\r\n            return return_false();\r\n        case 52:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '＄', false);\r\n            } else {\r\n                if (callback.words_in_list() > 3) callback.insert_word(3);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '４', false);\r\n            }\r\n            return return_false();\r\n        case 53:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '％', false);\r\n            } else {\r\n                if (callback.words_in_list() > 4) callback.insert_word(4);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '５', false);\r\n            }\r\n            return return_false();\r\n        case 54:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '＾', false);\r\n            } else {\r\n                if (callback.words_in_list() > 5) callback.insert_word(5);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '６', false);\r\n            }\r\n            return return_false();\r\n        case 55:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '＆', false);\r\n            } else {\r\n                if (callback.words_in_list() > 6) callback.insert_word(6);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '７', false);\r\n            }\r\n            return return_false();\r\n        case 56:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '＊', false);\r\n            } else {\r\n                if (callback.words_in_list() > 7) callback.insert_word(7);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '８', false);\r\n            }\r\n            return return_false();\r\n        case 57:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '（', false);\r\n            } else {\r\n                if (callback.words_in_list() > 8) callback.insert_word(8);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '９', false);\r\n            }\r\n            return return_false();\r\n        case 48:\r\n            if (e.shiftKey) {\r\n                if (callback.is_word_div_visible()) {\r\n                    callback.insert_word(callback.get_word_div_visible());\r\n                }\r\n                if (code_holder === '') replace_selection(input_ctrl, '）', false);\r\n            } else {\r\n                if (callback.words_in_list() > 9) callback.insert_word(9);\r\n                else if (code_holder === '') replace_selection(input_ctrl, '０', false);\r\n            }\r\n            return return_false();\r\n        case 109:\r\n        case 189:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '＿' : 'ー', false);\r\n            else if (!e.shiftKey) alphabet_to_kana(input_ctrl, 'ー', show_hiragana);\r\n            return return_false();\r\n        case 107:\r\n        case 187:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '＋' : '＝', false);\r\n            return return_false();\r\n        case 81:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｑ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 87:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｗ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 69:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｅ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 82:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｒ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 84:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｔ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 89:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｙ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 85:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｕ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 73:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｉ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 79:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｏ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 80:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｐ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 219:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '｛' : '「', false);\r\n            return return_false();\r\n        case 221:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '｝' : '」', false);\r\n            return return_false();\r\n        case 220:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '｜' : '￥', false);\r\n            return return_false();\r\n        case 65:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ａ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 83:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｓ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 68:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｄ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 70:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｆ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 71:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｇ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 72:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｈ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 74:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｊ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 75:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｋ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 76:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｌ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 59:\r\n        case 186:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '：' : '；', false);\r\n            return return_false();\r\n        case 222:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') {\r\n                if (e.shiftKey) {\r\n                   left_yinhao2 = !left_yinhao2;\r\n                   replace_selection(input_ctrl, left_yinhao2 ? '“' : '”', false);\r\n                }\r\n                else {\r\n                   left_yinhao1 = !left_yinhao1;\r\n                   replace_selection(input_ctrl, left_yinhao1 ? '‘' : '’', false);\r\n                }\r\n            }\r\n            return return_false();\r\n        case 90:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｚ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 88:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｘ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 67:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｃ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 86:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｖ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 66:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｂ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 78:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｎ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 77:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (!callback.is_word_div_visible()) {\r\n                alphabet_to_kana(input_ctrl, 'ｍ', show_hiragana);\r\n            }\r\n            return return_false();\r\n        case 188:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '＜' : '、', false);\r\n            return return_false();\r\n        case 190:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '＞' : '。', false);\r\n            return return_false();\r\n        case 191:\r\n            if (callback.is_word_div_visible()) {\r\n                callback.insert_word(callback.get_word_div_visible());\r\n            }\r\n            if (code_holder === '') replace_selection(input_ctrl, e.shiftKey ? '？' : '・', false);\r\n            return return_false();\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nfunction key_down(e, input_ctrl) {\r\n      // $('#show_area').html('');\r\n  //  $('.message').hide();\r\n   if (e.ctrlKey) return true;\r\n   var key = e.which ? e.which : e.keyCode;\r\n\r\n   var callback = input_ctrl.callback ?? new Callback(input_ctrl);\r\n   input_ctrl.callback = callback;\r\n   \r\n   if(e.key === '`' && e.ctrlKey) {  // ` + Ctrl -> Hiragana/Katakana\r\n      callback.show_hiragana = !callback.show_hiragana;\r\n      return true;\r\n   }\r\n   if(e.key === '-') // onbiki\r\n      key = 189;\r\n\r\n   if(e.key === '`') // quotes\r\n      key = 220;\r\n   \r\n   return key_down_japanese(e, key, input_ctrl, callback)\r\n}\r\n\r\nexport {key_down}","import React from 'react'\r\nimport $ from 'jquery';\r\nimport {key_down as key_down_korean} from './KoreanVK';\r\nimport {key_down as key_down_japanese} from './JapaneseVK';\r\n\r\n\r\nclass VirtualKeyboardInput extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.inputDiv = React.createRef();\r\n   }\r\n   \r\n   componentDidMount() {\r\n     this.vkEdit = new VirtuakKeyboardEdit({\r\n        input: this.inputDiv.current,\r\n        input_text: this.props.input_text,\r\n        ethalon: this.props.ethalon,\r\n        onChange: this.props.onChange,\r\n        language: this.props.language,\r\n     });\r\n     this.inputDiv.current.focus();\r\n  }\r\n\r\n   render() {\r\n      const styles = { minWidth: '6em', display: 'inline-block' };\r\n      return (\r\n         <span  style={styles} className=\"border border-primary\"\r\n               contentEditable=\"true\" \r\n               ref={this.inputDiv}\r\n               >\r\n         </span>\r\n      );\r\n   }\r\n}\r\n\r\nclass VirtuakKeyboardEdit {\r\n   constructor(props){\r\n      this.input = $(props.input);\r\n      this.handleKeyDown = this.handleKeyDown.bind(this);\r\n      this.handleMouseDown = this.handleMouseDown.bind(this);\r\n      this.handleOnInput = this.handleOnInput.bind(this);\r\n      $(this.input).keydown(this.handleKeyDown);\r\n      $(this.input).mousedown(this.handleMouseDown);\r\n      $(this.input).on(\"input\", this.handleOnInput);\r\n      $(this.input).text(props.input_text || '');\r\n      //$(this.input).html('Te<span class=\"bg-secondary\">ee</span>st of input');\r\n      this.ethalon = props.ethalon || '';\r\n      this.activeNode = null;\r\n      this.afterNode = null;\r\n      this.onChange = props.onChange || ((text) => {});\r\n      switch(props.language) {\r\n      case 'ko': this.key_down_handler = key_down_korean;\r\n         break;\r\n      case 'ja': this.key_down_handler = key_down_japanese;\r\n         break;\r\n      default:\r\n         this.key_down_handler = key_down_native;\r\n      }\r\n   }\r\n   \r\n   // full key code list\r\n   // http://gcctech.org/csc/javascript/javascript_keycodes.htm\r\n   handleKeyDown(e) {\r\n      var key = e.which ? e.which : e.keyCode;\r\n      $(\"#hint\").remove();\r\n      if(key === 32 && e.ctrlKey) {\r\n         this.show_hint();\r\n      }\r\n      const inEdit = this.activeNode != null;\r\n      const ret_value = this.key_down_handler(e, this);\r\n      if (key === 13) {\r\n         if(!inEdit)\r\n            this.input.blur();\r\n         return true;  // enter\r\n      }\r\n      if (this.activeNode == null) {\r\n         //this.remove_empty_elements(); // can lose focus!\r\n      }\r\n      return ret_value;\r\n   }\r\n   \r\n   handleMouseDown(e) {\r\n   }\r\n   \r\n   handleOnInput() {\r\n      const text = $(this.input).text();\r\n      this.onChange(text);\r\n   }\r\n\r\n   handleMouseDownDiv(e) {\r\n     if ((!document.all && e.button === 0) || (document.all && e.button === 1)) {\r\n        this.release_selection();\r\n     }\r\n   }\r\n   \r\n   getActiveNodeAndOffset() { \r\n     if (window.getSelection) {\r\n        const sel = window.getSelection();\r\n        return [sel.focusNode, sel.focusOffset];\r\n     }\r\n     return [null, 0]\r\n   }\r\n   \r\n   setActiveNodeCaretPos(newPos) { setCaretPosition(this.activeNode, newPos); }\r\n   \r\n   get_text_before(stopElem) {\r\n      let text = '';\r\n      $(this.input).contents().each((index, elem) => {\r\n         text += elem.textContent;\r\n         if(elem === stopElem)\r\n            return false;\r\n      });\r\n      return text;\r\n   }\r\n   \r\n   remove_empty_elements() {\r\n      $(this.input).children().each(function() {\r\n          if ($(this).text().length === 0) {\r\n              $(this).remove();\r\n          }\r\n      });\r\n   }\r\n   \r\n   get_text_before_caret() {\r\n      const [focusedNode, textOffset] = this.getActiveNodeAndOffset();\r\n      let text_before_caret = $(this.activeNode).text().substr(textOffset);\r\n      text_before_caret += this.get_text_before(focusedNode);\r\n      return text_before_caret;\r\n   }\r\n   \r\n   show_hint() {\r\n      if(this.ethalon === '')\r\n         return;\r\n       const text_before = this.get_text_before_caret();\r\n       let hint = this.ethalon.substr(text_before.length, 2);\r\n       //if (hint != '') {\r\n       hint = hint !== '' ? hint : '\\u20E0'; // no symbol\r\n       {\r\n          const hintElem = $('<span id=\"hint\" class=\"text-info\">').text(hint);\r\n          const [focusedNode, ] = this.getActiveNodeAndOffset();\r\n          this.append_elem_after_caret(focusedNode, hintElem);\r\n       }\r\n   }\r\n   \r\n   finish_input(str, after_elem) {\r\n      const full_text = this.get_text_before(after_elem);\r\n      const correct_text = this.ethalon.substr(full_text.length, str.length);\r\n      const isCorrect = (this.ethalon === '') || (correct_text === str);\r\n      let newNode = null;\r\n      if (isCorrect) {\r\n         newNode = document.createTextNode(str); // TODO: merge text nodes\r\n      } else {\r\n         newNode = $('<span class=\"text-danger\">').text(str);\r\n      }\r\n\r\n      if (after_elem === this.input[0])\r\n         $(after_elem).append(newNode);\r\n      else\r\n         $(after_elem).after(newNode);\r\n\r\n      if(this.afterNode != null)\r\n         setCaretPosition(this.afterNode, 0);\r\n      else if (newNode.nodeType === Node.TEXT_NODE)\r\n         setCaretPosition(newNode, str.length);\r\n      else\r\n         setCaretPosition(newNode[0].firstChild, str.length);\r\n      this.onChange(this.get_input_text());\r\n   }\r\n   \r\n   append_elem_after_caret(after_node, new_elem) {\r\n      if (after_node === this.input[0]) {\r\n         $(after_node).append(new_elem);  // the input is empty\r\n         return after_node;\r\n      }\r\n      else if (after_node.parentNode !== null && \r\n               after_node.parentNode !== this.input[0]) {\r\n         $(after_node.parentNode).after(new_elem);   // #TEXT of a child of the input\r\n         return after_node.parentNode;\r\n      } else\r\n         $(after_node).after(new_elem);   // #TEXT of the input\r\n      return after_node;\r\n   }\r\n   \r\n   get_input_text() {\r\n      //let textAndCorrectness = [];\r\n      let text = '';\r\n      $(this.input).contents().each((index, node) => {\r\n         //textAndCorrectness.push( [node.textContent, incorrect]);\r\n         text += node.textContent;\r\n      });\r\n      return text;\r\n   }\r\n   \r\n   // pressed Esc\r\n   clear_all() {\r\n      console.log('CLR ');\r\n      if(this.activeNode == null)\r\n         return;\r\n      $(\"#highlighted\").remove();\r\n      if (this.activeNode.nodeValue != null)\r\n         this.setActiveNodeCaretPos(this.activeNode.nodeValue.length);\r\n      this.activeNode = null;\r\n      this.afterNode = null\r\n   }\r\n\r\n   release_selection() {\r\n      console.log('Rel Sel');\r\n      if(this.activeNode == null)\r\n         return;\r\n      const added_text = $(\"#highlighted\").text();\r\n      $(\"#highlighted\").remove();\r\n      this.finish_input(added_text, this.activeNode);\r\n      this.activeNode = null;\r\n      this.afterNode = null;\r\n      \r\n\r\n   }\r\n   \r\n   replace_selection(str, highlight) {\r\n      console.log('RS:' + str + ' ' + highlight);\r\n      if(!highlight) {\r\n         if(this.activeNode == null) {\r\n            const [focusedNode, ] = this.getActiveNodeAndOffset(); // instant input\r\n            this.finish_input(str, focusedNode);\r\n            return;\r\n         }\r\n         $(\"#highlighted\").remove();\r\n         this.finish_input(str, this.activeNode);\r\n         this.activeNode = null;\r\n      }\r\n      else if(this.activeNode == null){\r\n         const [focusedNode, textOffset] = this.getActiveNodeAndOffset();\r\n         this.activeNode = focusedNode;\r\n         const initialText = $(this.activeNode).text();\r\n         this.activeNode.nodeValue = initialText.substr(0, textOffset);\r\n         const newSpan = $('<span id=\"highlighted\" class=\"text-white bg-dark\">').text(str);\r\n         if (this.activeNode === this.input[0])\r\n            $(this.activeNode).append(newSpan);  // the input is empty\r\n         else if (this.activeNode.parentNode !== null && \r\n                  this.activeNode.parentNode !== this.input[0]) {\r\n            this.activeNode = this.activeNode.parentNode;  // #TEXT of a child of the input\r\n            $(this.activeNode).after(newSpan);\r\n         } else\r\n            $(this.activeNode).after(newSpan);   // #TEXT of the input\r\n         const after_text = initialText.substr(textOffset);\r\n         if(after_text !== '') {\r\n            this.afterNode = document.createTextNode(after_text);\r\n            $(newSpan).after(this.afterNode);\r\n         } else \r\n            this.afterNode = null;\r\n         newSpan.focus(); // is this needed??\r\n         setCaretPosition(newSpan[0].firstChild ?? newSpan[0], 0);\r\n      }\r\n      else {\r\n         this.selected_text = str;\r\n         $(\"#highlighted\").text(str);\r\n      }\r\n   }\r\n}\r\n\r\nfunction key_down_native(e, input) {\r\n   if (e.key.length !== 1) {\r\n       return true;\r\n   }\r\n   input.replace_selection(e.key, false);\r\n   return false;\r\n}\r\n\r\nfunction setCaretPosition(elem, caretPos) {\r\n   var range = document.createRange();\r\n   var sel = window.getSelection();\r\n   range.setStart(elem, caretPos);\r\n   range.collapse(true);\r\n   sel.removeAllRanges();\r\n   sel.addRange(range);\r\n}\r\n\r\nexport default VirtualKeyboardInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getUser, getTest } from './User.js';\r\nimport queryString from 'query-string';\r\nimport Editable from \"./Editable\";\r\nimport VirtualKeyboardInput from \"./VirtualKeyboardInput\";\r\n//import Pencil from \"bootstrap-icons/icons/pencil.svg\";\r\n\r\nfunction InputEditable({ethalon, onChange=((text) => {}), language}) {\r\n   const [typedText, setTypedText] = useState(\"\");\r\n  /*\r\n    Enclose the input element as the children to the Editable component to make it as inline editable.\r\n  */\r\n  return (\r\n    <Editable\r\n      text={typedText}\r\n      placeholder=\"Ввести слово\"\r\n      type=\"input\"\r\n    >\r\n      <VirtualKeyboardInput\r\n        name=\"typed_text\"\r\n        placeholder=''\r\n        input_text={typedText}\r\n        ethalon={ethalon}\r\n        onChange={text => { setTypedText(text); onChange(text);}}\r\n        language={language}\r\n      />\r\n    </Editable>\r\n  );\r\n}\r\n\r\nconst Mode = Object.freeze({\r\n      ShowWordAndTranslation: 1,\r\n      TestTranslation: 2,\r\n      TestWord: 3\r\n   })\r\n   \r\nfunction ConfirmTranslationControls({wordId}) {\r\n   const Step = Object.freeze({\r\n         ShowOkFailed: 1,\r\n         Ok: 2,\r\n         Failed: 3\r\n      })\r\n   const [step, setStep] = useState(Step.ShowOkFailed);\r\n   switch(step) {\r\n      case Step.ShowOkFailed:\r\n         return <React.Fragment>\r\n                  <span className=\"float-right\">\r\n                     <button className=' ml-2 btn btn-success btn-sm py-0' id={'remember-button-' + wordId}\r\n                             onClick={()=> { setStep(Step.Ok); getTest().setTranslationTestResult(wordId, true); }} >\r\n                        Помню\r\n                     </button>\r\n                     <button className=' ml-2 btn btn-danger btn-sm mx-1 py-0' id={'forgot-button-' + wordId}\r\n                             onClick={()=> { setStep(Step.Failed); getTest().setTranslationTestResult(wordId, false); }} >\r\n                        Не помню\r\n                     </button>\r\n                  </span>\r\n                </React.Fragment>\r\n      case Step.Ok:\r\n         return <span className=\"text-success float-right ml-2\">{'\\u00A0'.repeat(7)  + '\\u2713' + '\\u00A0'.repeat(27)}</span>\r\n      case Step.Failed:\r\n         return <span className=\"text-danger float-right ml-2\">{ '\\u00A0'.repeat(25) + '\\u2717' + '\\u00A0'.repeat(9)}</span>\r\n      default:\r\n         return null;\r\n   }\r\n}\r\n\r\nfunction getWordToShow(isKanaMode, item) {\r\n   return isKanaMode && item.extra !== undefined ? item.extra : item.word;\r\n}\r\n\r\nfunction ShowBothMode({rows, modeControls, isFirst, isKanaMode}) {\r\n   isFirst = false;\r\n   const rowElements = rows.map(\r\n                  (item, index) => {\r\n                     const wordToShow = getWordToShow(isKanaMode, item);\r\n                     if(index === 0) {\r\n                        return (<tr key={index} >\r\n                                    <td rowSpan={rows.length} >\r\n                                      {modeControls}\r\n                                    </td>\r\n                                    <td className={isFirst ? \"\" : \"\"}>{wordToShow}</td>\r\n                                    <td>{item.meaning}</td>\r\n                               </tr>)\r\n                     } else {\r\n                     return (<tr key={index}>\r\n                                 <td>{wordToShow}</td>\r\n                                 <td>{item.meaning}</td>\r\n                            </tr>)\r\n                     }\r\n                  });\r\n   return rowElements;\r\n}\r\n\r\nfunction getBgColorFromScore(score) {\r\n   switch(score) {\r\n      // better 98c9a3  best  77bfa3\r\n      case 3: return \"#bfd8bd80\";\r\n      case 2: return \"#dde7c780\";\r\n      case 1:\r\n      case 0: return 0;\r\n\r\n      case -1: return \"#ffdab980\";\r\n      case -2: return \"#fbc4ab80\";\r\n      case -3: \r\n      case -4: return \"#f8ad9d80\";\r\n      default:\r\n         return (score > 0) ? \"#98c9a380\" : \"#f4978e80\";\r\n   }\r\n}\r\n\r\nfunction TestTranslationMode({rows, modeControls, isFirst, isKanaMode}) {\r\n   const [isTranslationShown, showTranslation] = useState(false);\r\n\r\n   const TranslationCell = ({translation, wordId}) => {\r\n                              return (<td>{isTranslationShown\r\n                                       ? (<>\r\n                                             <span>{translation}</span> \r\n                                             <ConfirmTranslationControls key={wordId} wordId={wordId} />\r\n                                          </>\r\n                                          )\r\n                                       : <span className='text-muted'>{'\\u00A0'.repeat(/*translation.length/2*/5) + '?' + '\\u00A0'.repeat(/*translation.length/2*/5)}</span>}\r\n                                 </td>)\r\n                           };\r\n   const buttonShow =  <button className={'btn btn-outline-info btn-sm mt-2 d-block '}\r\n                                 onClick={()=> {showTranslation(true)}} \r\n                                 disabled={isTranslationShown}>\r\n                              Показать перевод\r\n                       </button>;\r\n   const rowElements = rows.map(\r\n                  (item, index) => {\r\n                     const bgColor = getBgColorFromScore(item.score);\r\n                     const wordToShow = getWordToShow(isKanaMode, item);\r\n                     if(index === 0) {\r\n                        return (<tr key={index}>\r\n                                    <td rowSpan={rows.length}>{modeControls} {buttonShow}</td>\r\n                                    <td style={{ backgroundColor: bgColor}}>{wordToShow}</td>\r\n                                    <TranslationCell translation={item.meaning} wordId={item.id} />\r\n                              </tr>)\r\n                     } else {\r\n                        return (<tr key={index}>\r\n                                  <td style={{backgroundColor: bgColor}}>{wordToShow}</td>\r\n                                  <TranslationCell translation={item.meaning} wordId={item.id} />\r\n                               </tr>);\r\n                     }\r\n                  });\r\n   return rowElements;\r\n}\r\n\r\nfunction RowToInputWord({modeControls, rowSpan, word, translation, language}) {\r\n   const [isCorrect, setCorrect] = useState(false);\r\n   const onChangeText = (text) => {\r\n      const correct = (text.length !== 0) && (word === text);\r\n      setCorrect(correct);\r\n   };\r\n   const after = <div className='text-success float-right'>{isCorrect ? '\\u2713' : ''}</div>;\r\n   const editable = <div className=\"float-left\">\r\n                        <InputEditable \r\n                           ethalon={word} \r\n                           onChange={onChangeText}\r\n                           language={language}\r\n                        />\r\n                    </div>;\r\n   return  (<tr>\r\n               {modeControls ? (<td rowSpan={rowSpan}>{modeControls}</td>) : null}\r\n               <td>\r\n                  {editable}\r\n                  {after}\r\n               </td>\r\n               <td className=''>{translation}</td>\r\n            </tr>);\r\n}\r\n\r\nfunction TestWordMode({rows, modeControls, language, isKanaMode}) {\r\n   const rowElements = rows.map(\r\n         (item, index) => {\r\n            const wordToShow = getWordToShow(isKanaMode, item);\r\n            return <RowToInputWord word={wordToShow} \r\n                                 translation={item.meaning} \r\n                                 language={language}\r\n                                 modeControls={index === 0 ? modeControls : undefined}\r\n                                 rowSpan={rows.length}\r\n                                 key={index} />\r\n         });\r\n   return rowElements;\r\n}\r\n\r\nfunction Card({rows, language, name, isFirst, isActive, onActivate, isKanaMode,\r\n               initialMode, onResetMode}) {\r\n   const [mode, setMode] = useState(initialMode ?? Mode.TestTranslation);\r\n   //console.log(initialMode ?? Mode.TestTranslation);\r\n   if(initialMode !== undefined && initialMode !== mode) {\r\n      setMode(initialMode);\r\n   }\r\n\r\n   const ModeButton = ({buttonMode, name, title, id}) => {\r\n             const style = isActive ? 'primary' : 'secondary';\r\n             return <label className={`btn btn-sm btn-outline-${style} text-left ` + ((mode === buttonMode)? 'active' : '')}\r\n                        title={title}>\r\n                        <input type=\"radio\" name={\"option\"+id} id={\"option\"+id}\r\n                        autoComplete=\"off\" checked={mode === buttonMode}\r\n                        onChange={() => { onActivate(); setMode(buttonMode) }} />\r\n                        {name}\r\n                   </label>\r\n   };\r\n   const modeControls = (\r\n          <div className=\"btn-group-vertical btn-group-toggle p-0\" data-toggle=\"buttons\">\r\n            <ModeButton buttonMode={Mode.ShowWordAndTranslation} name=\"1. Слово и перевод\"   title='Показать слово и перевод' id=\"0\"/>\r\n            <ModeButton buttonMode={Mode.TestTranslation}        name=\"2. Проверить перевод\" title='Проверить перевод' id=\"1\"/>\r\n            <ModeButton buttonMode={Mode.TestWord}               name=\"3. Ввести слово\"      title='Проверит слово' id=\"2\"/>\r\n          </div>\r\n   );\r\n   let modeTable = null;\r\n   const args = {\r\n      rows: rows,\r\n      modeControls: modeControls,\r\n      isFirst: isFirst,\r\n      language: language,\r\n      isKanaMode: isKanaMode\r\n   };\r\n   switch(mode) {\r\n      case Mode.ShowWordAndTranslation:  modeTable = <ShowBothMode         {...args}/>; break;\r\n      case Mode.TestTranslation:         modeTable = <TestTranslationMode  {...args}/>; break;\r\n      case Mode.TestWord:                modeTable = <TestWordMode         {...args}/>; break;\r\n      default:\r\n   }\r\n\r\n   return (<tbody style={{ }} className={isActive ? \"border border-primary\" : \"\"}>{modeTable}</tbody>);\r\n}\r\n\r\n\r\n\r\nconst KanaMode = ({onChange}) => (\r\n    <div className=\"custom-control custom-checkbox mb-3\">\r\n      <input type=\"checkbox\" className=\"custom-control-input\" id=\"kanaModeCheck\" name=\"kanaMode\" onChange={(e) => onChange(e.target.checked)} />\r\n      <label className=\"custom-control-label\" htmlFor=\"kanaModeCheck\">Отображать слова каной (理解 → りかい)</label>\r\n    </div>\r\n);\r\n\r\nconst VirtualKbd = ({onChange}) => (\r\n    <div className=\"custom-control custom-checkbox mb-3\">\r\n      <input type=\"checkbox\" className=\"custom-control-input\" id=\"virtualKbdCheck\" name=\"virtualKbd\"\r\n             onChange={(e) => onChange(e.target.checked)} defaultChecked={true} />\r\n      <label className=\"custom-control-label\" htmlFor=\"virtualKbdCheck\">Виртуальная клавиатура</label>\r\n    </div>\r\n);\r\n\r\nconst OnlyForgotten = ({onChange}) => (\r\n    <div className=\"custom-control custom-checkbox mb-3\">\r\n      <input type=\"checkbox\" className=\"custom-control-input\" id=\"onlyForgotteCheck\" name=\"onlyForgotten\"\r\n             onChange={(e) => onChange(e.target.checked)} defaultChecked={false} />\r\n      <label className=\"custom-control-label\" htmlFor=\"onlyForgotteCheck\">Показывать только забытые слова</label>\r\n    </div>\r\n);\r\n\r\n// Create flag from country code\r\nfunction getCountryFlag(cc) {\r\n  // Mild sanity check.\r\n  if (cc.length !== 2)\r\n    return cc;\r\n\r\n  // Convert char to Regional Indicator Symbol Letter\r\n  function risl(chr) {\r\n    return String.fromCodePoint(0x1F1E6 - 65 + chr.toUpperCase().charCodeAt(0));\r\n  }\r\n\r\n  // Create RISL sequence from country code.\r\n  return risl(cc[0]) + risl(cc[1]);\r\n}\r\n\r\nconst Emoji = props => (\r\n    <option\r\n        className=\"emoji\"\r\n        role=\"img\"\r\n        aria-label={props.label ?? \"\"}\r\n        aria-hidden={props.label ? \"false\" : \"true\"}\r\n        value={props.label ?? \"\"}\r\n    >\r\n        {props.symbol}\r\n    </option>\r\n);\r\n\r\nconst LanguageSelector = ({language}) => (\r\n   <div className=\"form-group row\" >\r\n      <label htmlFor=\"language-select\" className=\"col-sm-1 col-form-label\" >Язык: </label>\r\n      <select  style={{width: \"10em\"}} className=\"form-control\" id=\"language-select\" value={language} onChange={()=>{}}>\r\n         <option value=\"\">Не указан</option>\r\n         <Emoji symbol={getCountryFlag('us') + ' Английский'} label=\"en\" />\r\n         <Emoji symbol={getCountryFlag('kr') + ' Корейский'}  label=\"ko\"  />\r\n         <Emoji symbol={getCountryFlag('jp') + ' Японский'}   label=\"ja\" />\r\n      </select>\r\n   </div>\r\n);\r\n\r\nconst SetAllCardMode = ({mode, onModeChange}) => {\r\n   return (\r\n         <div className=\"form-group row\">\r\n            <label className=\"col-sm-1 col-form-label\">Общий режим:</label>\r\n            { /*<div className=\"my-2 form-control\"> */ }\r\n               <button className='btn btn-outline-primary' \r\n                       disabled={mode === Mode.ShowWordAndTranslation}\r\n                       onClick={()=> onModeChange(Mode.ShowWordAndTranslation)} >\r\n                 1. Слово и перевод\r\n               </button>\r\n               <button className='btn btn-outline-primary ml-2' \r\n                       disabled={mode === Mode.TestTranslation}\r\n                       onClick={()=> onModeChange(Mode.TestTranslation)} >\r\n                 2. Проверить перевод\r\n               </button>\r\n               <button className='btn btn-outline-primary ml-2' \r\n                       disabled={mode === Mode.TestWord}\r\n                       onClick={()=> onModeChange(Mode.TestWord)} >\r\n                 3. Ввести слово\r\n               </button>\r\n           {  /*</div>*/ }\r\n           </div>);\r\n}\r\n\r\nconst Page = (props) => \r\n  <>\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className=\"col\">\r\n          <Matrix {...props} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n\r\nconst GlobalControls = ({deck, setInitialMode, initialMode, \r\n                         setKanaMode, setOnlyForgottenWords, }) => {\r\n  return (\r\n  <>\r\n     <LanguageSelector language={deck.language} />\r\n    { (['ja', 'cn' ].indexOf(deck.language)>= 0) ? <KanaMode onChange={(isSet) => setKanaMode(isSet)}/> : null }\r\n    { (['ja', 'cn' ].indexOf(deck.language)>= 0) ? <VirtualKbd onChange={(isSet) => {} } /> : null } \r\n    <OnlyForgotten onChange={(isSet) => setOnlyForgottenWords(isSet)} />\r\n    <SetAllCardMode mode={initialMode}\r\n                   onModeChange={ (mode) => setInitialMode(mode) } />\r\n  </>\r\n  )\r\n}\r\n\r\nfunction Matrix(props) {\r\n   const [deck, setDeck] = useState({rows:[], name: '', language: ''});\r\n   const [activeCardId, setActiveCardId] = useState(undefined);\r\n   const [isKanaMode, setKanaMode] = useState(false);\r\n   //const [isVirtualKbd, setVirtualKbd] = useState(true);\r\n   const [isOnlyForgottenWords, setOnlyForgottenWords] = useState(false);\r\n   const [initialMode, setInitialMode] = useState(Mode.TestTranslation);\r\n   \r\n   useEffect(() => {\r\n      if(deck?.name === ''){\r\n         deckGetter();\r\n      }\r\n   });\r\n   \r\n   const urlParams = queryString.parse(props.location.search);\r\n   if (urlParams.id === undefined) {\r\n      return null;\r\n   }\r\n\r\n   const deckId = urlParams.id;\r\n   const deckGetter = async () => {\r\n      const deckD = await getUser().getDeck(deckId, 0, 100)\r\n      setDeck(deckD);\r\n   }\r\n   \r\n   if (deck === undefined)\r\n      return (<><h1 className='text-center'>Не такой колоды</h1></>)\r\n\r\n   const chunk_size = 5\r\n   console.log(deck)\r\n   const cardRows = !isOnlyForgottenWords \r\n                        ? deck.rows \r\n                        : deck.rows.filter((item) => item.score < 0);\r\n\r\n   let cards = [];\r\n   for (let i=0, size = cardRows.length; i < size; i += chunk_size) {\r\n      const temparray = cardRows.slice(i, i + chunk_size);\r\n      const cardData = { \r\n                     rows: temparray, \r\n                     name : '' + (i + 1) + '-' + (i + temparray.length),\r\n                     language : deck.language,\r\n                     isFirst: i === 0,\r\n                     isActive: activeCardId === i,\r\n                     onActivate: () => { setActiveCardId(i); setInitialMode(undefined) },\r\n                     isKanaMode: isKanaMode,\r\n                     initialMode: initialMode,\r\n                  //   onResetMode: () => setInitialMode(undefined)\r\n                   };\r\n      cards.push(<Card key={i} {...cardData} />);\r\n   }\r\n\r\n   const tableStyle = \"table table-striped table-sm  table-nonfluid border\";\r\n   return ( <div className=\"m-2\">\r\n               <h2 className=\"ml-3\">{deck.name}</h2>\r\n               \r\n               <div className=\"col-form-label\" >{deck.description}</div>\r\n               <GlobalControls deck={deck} initialMode={initialMode} setInitialMode={ setInitialMode }\r\n                  setKanaMode={setKanaMode} setOnlyForgottenWords={setOnlyForgottenWords} />\r\n               <table className={tableStyle}>\r\n                  <thead className=\"thead-light\">\r\n                     <tr>\r\n                        <th >Режим повторения</th> \r\n                        <th style={{ minWidth: '10em'}} >Слово</th> \r\n                        <th >Перевод</th> \r\n                     </tr>\r\n                  </thead>\r\n                  {cards}\r\n               </table>\r\n           </div>);\r\n}\r\n\r\nexport { Page as Matrix };","import React, { useState, useEffect } from 'react'\r\nimport {Modal, Button, Form} from 'react-bootstrap'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { getUser } from './User.js'\r\n\r\nconst UserControl = () => {\r\n   const [username, setUsername] = useState(undefined);\r\n   const history = useHistory();\r\n   \r\n   useEffect(() => {\r\n      userGetter();\r\n   });\r\n\r\n   const userGetter = async () => {\r\n      const username = await getUser().getName();\r\n      setUsername(username);\r\n   }\r\n   \r\n   const onLogout = () => {\r\n      getUser().logout();\r\n      setUsername(undefined);\r\n      history.push('/');\r\n   }\r\n   \r\n   return (username === undefined)\r\n            ? (\r\n               <span className=\"float-right text-center \">\r\n                  <Login />\r\n                  <Button variant=\"secondary ml-2\">Регистрация</Button>\r\n               </span>\r\n            )\r\n            : (\r\n               <span className=\"float-right\">\r\n                  <Button variant=\"link\">{username}</Button>\r\n                  <Button variant=\"secondary ml-1\" onClick={onLogout}>Выход</Button>\r\n               </span>\r\n            );\r\n}\r\n\r\nfunction Login() {\r\n  const [show, setShow] = useState(false);\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [rememberMe, setRememberMe] = useState(true);\r\n  //const history = useHistory();\r\n  \r\n   useEffect(() => {\r\n      if(username === undefined){\r\n         //deckGetter();\r\n      }\r\n   });\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const login = () => {\r\n     getUser().login(username, password, rememberMe).then(() => {\r\n        setUsername(username);\r\n        //history.push('/');\r\n     });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Вход\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Вход в систему</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <Form>\r\n           <Form.Group controlId=\"formBasicName\">\r\n             <Form.Control type=\"input\" placeholder=\"Имя\" onChange={ (e) => setUsername(e.target.value) } />\r\n           </Form.Group>\r\n\r\n           <Form.Group controlId=\"formBasicPassword\">\r\n             <Form.Control type=\"password\" placeholder=\"Пароль\" onChange={ (e) => setPassword(e.target.value) } />\r\n           </Form.Group>\r\n           <Form.Group controlId=\"formBasicCheckbox\">\r\n             <Form.Check type=\"checkbox\" label=\"Запомнить\" onChange={(e) => setRememberMe(e.target.checked)} />\r\n           </Form.Group>\r\n         </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={ () => { handleClose(); login(); } }>\r\n            Вход\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Отмена\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nclass NavBar extends React.Component {\r\n   render() {\r\n      return (\r\n         <header>\r\n            <nav className='p-1 bg-dark'>\r\n               <img className=' m-2' src='/mind_icon_src.png' alt='logo' width='32' height='32' />\r\n               <NavLink to='/' className=' ml-2'>Все списки</NavLink>\r\n               <NavLink to='/test' className=' ml-3'>Тест-страница</NavLink>\r\n               <NavLink to='/about' className=' ml-3'>О программе</NavLink>\r\n               <UserControl />\r\n            </nav>\r\n         </header>\r\n      );\r\n   }\r\n}\r\n\r\nexport { NavBar };","import React from 'react';\r\nimport VirtualKeyboardInput from './VirtualKeyboardInput.js' \r\n\r\nconst InputTest = () => {\r\n   return (\r\n      <div className='m-1'>\r\n        <div>\r\n           <VirtualKeyboardInput/>\r\n        </div>\r\n        <div>\r\n           <VirtualKeyboardInput\r\n             placeholder=''\r\n             input_text=''\r\n             language='ko' />\r\n        </div>\r\n        <div>\r\n           <VirtualKeyboardInput\r\n             placeholder=''\r\n             input_text=''\r\n             language='ja' />\r\n        </div>\r\n     </div>);\r\n}\r\n\r\nconst TestPage = (props) => {\r\n   return <InputTest />;\r\n}\r\n\r\nexport {TestPage};","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { MatrixList } from './MatrixList.js'\nimport { Matrix } from './Matrix.js'\nimport { NavBar } from './NavBar.js'\nimport { TestPage } from './TestPage.js'\n\nfunction Error() {\n   return (\n            <div className='text-center'>\n               <h1>404</h1>\n               <h2>Нет такой страницы</h2>\n            </div>\n          );\n}\n\nfunction App() {\n      console.log(`${process.env.PUBLIC_URL}/`)\n  return (\n      <BrowserRouter>\n         <NavBar />\n            <Switch>\n             <Route path={`${process.env.PUBLIC_URL}/`} component={MatrixList} exact/>\n             <Route path={`${process.env.PUBLIC_URL}/matrix`} component={Matrix}/>\n             <Route path={`${process.env.PUBLIC_URL}/test`} component={TestPage}/>\n             <Route component={Error}/>\n           </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}